{
  "openapi": "3.0.0",
  "info": {
      "title": "cf",
      "version": "1.0.0"
  },
  "servers": [
      {
          "url": "/api/v1",
          "description": "current server"
      }
  ],
  "paths": {
      "/rs/{rsid}": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/rs"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "get_rs_byID",
              "summary": "get_rs_byID"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "delete success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "delete_rs_byID",
              "summary": "delete_rs_byID"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/patch_rs_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/rs"
                              }
                          }
                      },
                      "description": ""
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "patch_rs_byID",
              "summary": "patch_rs_byID"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/rbac/permissions": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Defaults to 50.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/list_permissions_response"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_permissions",
              "summary": "get_rs_permissions"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/permission"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/permission"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "post_rs_permissions",
              "summary": "post_rs_permissions"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/rbac/permissions/{pid}": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "pid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/permission"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_permissions_byPID",
              "summary": "get_rs_permissions_byPID"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "pid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "delete_rs_permissions_byPID",
              "summary": "delete_rs_permissions_byPID"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/patch_rs_permissions_byPID_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "pid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/permission"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "patch_rs_permissions_byPID",
              "summary": "patch_rs_permissions_byPID",
              "description": "only support update description"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "pid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/rbac/roles": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Defaults to 50.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/list_roles_response"
                              }
                          }
                      },
                      "description": "Roles successfully retrieved."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_roles",
              "summary": "get_rs_roles",
              "description": "list all roles of a resource server"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/role"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/role"
                              }
                          }
                      },
                      "description": "Role successfully created."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": " "
                  }
              },
              "operationId": "post_rs_roles",
              "summary": "post_rs_roles",
              "description": "create a resource server role"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/rbac/roles/{rid}": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/role"
                              }
                          }
                      },
                      "description": "Role successfully retrieved."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_roles_byRID",
              "summary": "get_rs_roles_byRID",
              "description": "get rs role by id"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "Role successfully deleted."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "delete_rs_roles_byRID",
              "summary": "delete_rs_roles_byRID",
              "description": "Delete a role.\n"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/patch_rs_roles_byRID_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/role"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "patch_rs_roles_byRID",
              "summary": "patch_rs_roles_byRID",
              "description": "update description"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "rid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/rbac/roles/{rid}/permissions": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/permission"
                                  }
                              }
                          }
                      },
                      "description": "Role permissions successfully retrieved."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_roles_permissions",
              "summary": "get_rs_roles_permissions",
              "description": "Retrieve list of permissions granted by a role.\n"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/set_permissions_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/permission"
                                  }
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_rs_roles_permissions",
              "summary": "set_permissions_for_roles",
              "description": "add or delete permissions for a role"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "rid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/client": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/client"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: read:resource_servers."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "get_rs_byID_client",
              "summary": "get_rs_byID_client"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/access-keys/{akid}": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "akid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/rs_access_key"
                              }
                          }
                      },
                      "description": "success"
                  }
              },
              "operationId": "get_rs_access_keys_byID",
              "summary": "get_rs_access_keys_byID"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "akid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  }
              },
              "operationId": "delete_rs_access_keys_byID",
              "summary": "delete_rs_access_keys_byID"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/patch_ak_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "akid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/rs_access_key"
                              }
                          }
                      },
                      "description": "success"
                  }
              },
              "operationId": "patch_rs_access_keys_byID",
              "summary": "patch_rs_access_keys_byID"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "akid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/tenants/{oid}/members/{aid}/rbac/roles": {
          "get": {
              "tags": [
                  "tenants"
              ],
              "parameters": [
                  {
                      "name": "oid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "aid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/role"
                                  }
                              }
                          }
                      },
                      "description": "get role successful"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_tenants_members_roles",
              "summary": "get_tenants_members_roles"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/put_tenants_members_roles_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "tenants"
              ],
              "parameters": [
                  {
                      "name": "oid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "aid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/role"
                                  }
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_tenants_members_roles",
              "summary": "put_tenants_members_roles"
          },
          "parameters": [
              {
                  "name": "oid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "aid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/profile": {
          "get": {
              "tags": [
                  "profile"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/profile"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_profile",
              "summary": "get_profile"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/identity"
                          }
                      },
                      "application/x-www-form-urlencoded": {
                          "schema": {
                              "$ref": "#/components/schemas/identity"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "profile"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/profile"
                              }
                          }
                      },
                      "description": "identity successfully updated."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "invalid body"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "patch_profile",
              "summary": "patch_profile",
              "description": ""
          }
      },
      "/profile/access-keys": {
          "get": {
              "tags": [
                  "profile"
              ],
              "parameters": [
                  {
                      "name": "page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "per_page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_profile_accesskey_response_page"
                              }
                          }
                      },
                      "description": "success, data is profile_access_key list"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_access_keys",
              "summary": "get_access_keys"
          }
      },
      "/profile/password": {
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/patch_profile_password_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "profile"
              ],
              "responses": {
                  "204": {
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid body."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "patch_profile_password",
              "summary": "patch_profile_password"
          }
      },
      "/profile/permissions": {
          "get": {
              "tags": [
                  "profile"
              ],
              "parameters": [
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Paging is disabled if parameter not sent.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_pagination_response"
                              }
                          }
                      },
                      "description": "Permissions successfully retrieved. data is permission list"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_permissions_by_identity_ID",
              "summary": "get_permissions_by_identity_ID",
              "description": "Retrieve all permissions associated with the identity."
          }
      },
      "/public/schema/{schema_Id}": {
          "get": {
              "tags": [
                  "schema"
              ],
              "responses": {
                  "200": {
                      "description": "success"
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "not found. invlaid schema id"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_schema_byID",
              "summary": "get_schema_byID"
          },
          "parameters": [
              {
                  "name": "schema_Id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/auth/login": {
          "get": {
              "tags": [
                  "auth"
              ],
              "parameters": [
                  {
                      "name": "login_challenge",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {

                          }
                      },
                      "description": "open login ui"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "invalid body"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Internal Server Error"
                  }
              },
              "operationId": "get_login",
              "summary": "get_login"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/x-www-form-urlencoded": {
                          "schema": {
                              "$ref": "#/components/schemas/post_login_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "auth"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {

                          }
                      },
                      "description": "return login ui with error"
                  },
                  "302": {
                      "description": "redirect url to hydra"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid token."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Internal Server Error"
                  }
              },
              "operationId": "post_login",
              "summary": "post_login"
          }
      },
      "/public/password/forget": {
          "description": "",
          "post": {
              "tags": [
                  "public"
              ],
              "responses": {
                  "201": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid email."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "post_password_forget",
              "summary": "post_password_forget"
          },
          "parameters": [
              {
                  "name": "email",
                  "description": "",
                  "schema": {
                      "type": "string"
                  },
                  "in": "query",
                  "required": true
              }
          ]
      },
      "/public/password/reset": {
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/put_password_reset_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "public"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid code."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "put_password_reset",
              "summary": "put_password_reset"
          },
          "parameters": [
              {
                  "name": "code",
                  "description": "",
                  "schema": {
                      "type": "string"
                  },
                  "in": "query",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/access-keys": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Defaults to 50.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "格式: cloumn[:1]\ncloumn默认为降序,cloumn:1为升序\ncloumn可选: created_at; updated_at",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "description": "预留字段，暂未使用。",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_rs_access_keys"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_access_keys",
              "summary": "get_rs_access_keys",
              "description": "list access keys"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/post_ak_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/rs_access_key"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "post_rs_access_keys",
              "summary": "post_rs_access_keys",
              "description": "create access key\n\nbody must specify identity id"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/permissions": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Defaults to 50.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/list_permissions_response"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_openapis_permissions",
              "summary": "get_rs_openapis_permissions"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/permission"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/permission"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "post_rs_openapis_permissions",
              "summary": "post_rs_openapis_permissions"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/permissions/{pid}": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "pid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/permission"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_openapis_permissions_byID",
              "summary": "get_rs_openapis_permissions_byID"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "pid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "delete_rs_openapis_permissions_byID",
              "summary": "delete_rs_openapis_permissions_byID"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/patch_rs_permissions_byPID_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "pid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/permission"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "patch_rs_openapis_permissions_byID",
              "summary": "patch_rs_openapis_permissions_byID"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "pid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/roles": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Defaults to 50.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/list_roles_response"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_openapis_roles",
              "summary": "get_rs_openapis_roles"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/role"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/role"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "post_rs_openapis_roles",
              "summary": "post_rs_openapis_roles"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/roles/{rid}": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/role"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_openapis_roles_byID",
              "summary": "get_rs_openapis_roles_byID"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "delete_rs_openapis_roles_byID",
              "summary": "delete_rs_openapis_roles_byID"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/role"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/role"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "patch_rs_openapis_roles_byID",
              "summary": "patch_rs_openapis_roles_byID"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "rid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/roles/{rid}/permissions": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/list_permissions_response"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_openapis_roles_permissions",
              "summary": "get_rs_openapis_roles_permissions"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/set_permissions_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/permission"
                                  }
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_rs_openapis_roles_permissions",
              "summary": "put_rs_openapis_roles_permissions"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "rid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/version": {
          "get": {
              "tags": [
                  "version"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_version_response"
                              }
                          }
                      },
                      "description": "version"
                  }
              },
              "operationId": "get_version",
              "summary": "get version",
              "description": "get version"
          }
      },
      "/organizations": {
          "get": {
              "tags": [
                  "organizations"
              ],
              "parameters": [
                  {
                      "name": "page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "per_page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": false
                  },
                  {
                      "name": "q",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query",
                      "required": false
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_organizations_response_page"
                              }
                          }
                      },
                      "description": "the data is list of organization"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid token."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: read:organizations."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_organizations",
              "summary": "get_organizations"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/post_organization_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/organization"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "invalid body."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: create:organization."
                  },
                  "409": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "conflict with existing organization name."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "post_organizations",
              "summary": "post_organizations"
          }
      },
      "/rs": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Paging is disabled if parameter not sent.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "description": "预留字段，暂未使用。",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "格式: cloumn[:1]\ncloumn默认为降序,cloumn:1为升序\ncloumn可选: product_name; created_at; updated_at",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_rs_response_page"
                              }
                          }
                      },
                      "description": "Resource servers successfully retrieved."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: read:resource_servers."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "get_rs",
              "summary": "get_rs"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/post_rs_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/rs"
                              }
                          }
                      },
                      "description": "identity successfully created."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Connection is disabled."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: create:identities."
                  },
                  "409": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "conlict with existing identity, such as email/phone"
                  }
              },
              "operationId": "post_rs",
              "summary": "post_rs",
              "description": "Create a new API (also known as a resource server).\n1. name\n2. oauth client\n3. owner\n4. description\n\n----\n\n1. create client\n2. create resource server\n3. create role , permission\n4. assign role to client\n5. assign role to product admin"
          }
      },
      "/clients": {
          "get": {
              "tags": [
                  "clients"
              ],
              "parameters": [
                  {
                      "name": "limit",
                      "description": "The maximum amount of policies returned.",
                      "schema": {
                          "format": "int64",
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "offset",
                      "description": "The offset from where to start looking.",
                      "schema": {
                          "format": "int64",
                          "type": "integer"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/oAuth2Client"
                                  }
                              }
                          }
                      },
                      "description": "A list of clients."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/genericError"
                              }
                          }
                      },
                      "description": "genericError"
                  }
              },
              "operationId": "listOAuth2Clients",
              "summary": "List OAuth 2.0 Clients",
              "description": "This endpoint lists all clients in the database, and never returns client secrets.\n\nOAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities. To manage ORY Hydra, you will need an OAuth 2.0 Client as well. Make sure that this endpoint is well protected and only callable by first-party components.\nThe \"Link\" header is also included in successful responses, which contains one or more links for pagination, formatted like so: '; rel=\"{page}\"', where page is one of the following applicable pages: 'first', 'next', 'last', and 'previous'.\nMultiple links can be included in this header, and will be separated by a comma."
          },
          "post": {
              "requestBody": {
                  "$ref": "#/components/requestBodies/oAuth2Client"
              },
              "tags": [
                  "clients"
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/oAuth2Client"
                              }
                          }
                      },
                      "description": "oAuth2Client"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/genericError"
                              }
                          }
                      },
                      "description": "genericError"
                  },
                  "409": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/genericError"
                              }
                          }
                      },
                      "description": "genericError"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/genericError"
                              }
                          }
                      },
                      "description": "genericError"
                  }
              },
              "operationId": "createOAuth2Client",
              "summary": "Create an OAuth 2.0 client",
              "description": "Create a new OAuth 2.0 client If you pass `client_secret` the secret will be used, otherwise a random secret will be generated. The secret will be returned in the response and you will not be able to retrieve it later on. Write the secret down and keep it somwhere safe.\n\nOAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities. To manage ORY Hydra, you will need an OAuth 2.0 Client as well. Make sure that this endpoint is well protected and only callable by first-party components."
          }
      },
      "/auth/consent/": {
          "get": {
              "tags": [
                  "auth"
              ],
              "parameters": [
                  {
                      "name": "consent_challenge",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {

                          }
                      },
                      "description": "open login ui"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "invalid body"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Internal Server Error"
                  }
              },
              "operationId": "get_consent",
              "summary": "get_consent"
          }
      },
      "/identities": {
          "get": {
              "tags": [
                  "identities"
              ],
              "parameters": [
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Paging is disabled if parameter not sent.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "Field to sort by. Use <code>field:order</code> where order is <code>1</code> for ascending and <code>-1</code> for descending. e.g. <code>created_at:1</code>",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "description": "书写格式：\nfieldname1:value,fieldname2:a*,fieldname3:[startvalue to endvalue]\n\nfieldname和json里面的fieldname一致",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_identities_response_page"
                              }
                          }
                      },
                      "description": "identities successfully retrieved."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_identities",
              "summary": "get_identities",
              "description": ""
          },
          "post": {
              "requestBody": {
                  "description": "创建Tenant_Admin时，需要传递org name/description/shortName;\n创建Individual时，不需要传递org信息;\n创建Tenant_Member，需要传递org id;\ntannat admin 创建 Tenant_Member 请使用 /tennat/{tid}/member接口创建",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/post_identity_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "identities"
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/identity"
                              }
                          }
                      },
                      "description": "identity successfully created."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "invalid parameters."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: create:identities."
                  },
                  "409": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "conlict with existing identity, such as email/phone"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "post_identities",
              "summary": "post_identities",
              "description": "Create a new identity for a given role type, the identity will be assigned the specified role automaticcaly"
          }
      },
      "/rs/{rsid}/rbac/identities/{id}/roles": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "id",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/role"
                                  }
                              }
                          }
                      },
                      "description": "get roles successfully"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_identities_roles",
              "summary": "get_rs_identities_roles"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/set_roles_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "id",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/role"
                                  }
                              }
                          }
                      },
                      "description": "set roles successfully"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_rs_identities_roles",
              "summary": "put_rs_identities_roles"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/clients/{cid}/rbac/roles": {
          "get": {
              "tags": [
                  "clients"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/role"
                                  }
                              }
                          }
                      },
                      "description": "get roles successfully"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_clients_roles",
              "summary": "get_clients_roles",
              "description": "get client roles in iam"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/set_roles_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "clients"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/role"
                                  }
                              }
                          }
                      },
                      "description": "set roles successfully"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_clients_roles",
              "summary": "put_clients_roles",
              "description": "set client roles in iam"
          },
          "parameters": [
              {
                  "name": "cid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/clients/{cid}": {
          "get": {
              "tags": [
                  "clients"
              ],
              "parameters": [
                  {
                      "name": "cid",
                      "description": "The id of the OAuth 2.0 Client.",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/oAuth2Client"
                              }
                          }
                      },
                      "description": "oAuth2Client"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/genericError"
                              }
                          }
                      },
                      "description": "genericError"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/genericError"
                              }
                          }
                      },
                      "description": "genericError"
                  }
              },
              "operationId": "getOAuth2Client",
              "summary": "Get an OAuth 2.0 Client.",
              "description": "Get an OAUth 2.0 client by its ID. This endpoint never returns passwords.\n\nOAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities. To manage ORY Hydra, you will need an OAuth 2.0 Client as well. Make sure that this endpoint is well protected and only callable by first-party components."
          },
          "put": {
              "requestBody": {
                  "$ref": "#/components/requestBodies/oAuth2Client"
              },
              "tags": [
                  "clients"
              ],
              "parameters": [
                  {
                      "name": "cid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/oAuth2Client"
                              }
                          }
                      },
                      "description": "oAuth2Client"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/genericError"
                              }
                          }
                      },
                      "description": "genericError"
                  }
              },
              "operationId": "updateOAuth2Client",
              "summary": "Update an OAuth 2.0 Client",
              "description": "Update an existing OAuth 2.0 Client. If you pass `client_secret` the secret will be updated and returned via the API. This is the only time you will be able to retrieve the client secret, so write it down and keep it safe.\n\nOAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities. To manage ORY Hydra, you will need an OAuth 2.0 Client as well. Make sure that this endpoint is well protected and only callable by first-party components."
          },
          "delete": {
              "tags": [
                  "clients"
              ],
              "parameters": [
                  {
                      "name": "cid",
                      "description": "The id of the OAuth 2.0 Client.",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/genericError"
                              }
                          }
                      },
                      "description": "genericError"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/genericError"
                              }
                          }
                      },
                      "description": "genericError"
                  }
              },
              "operationId": "deleteOAuth2Client",
              "summary": "Deletes an OAuth 2.0 Client",
              "description": "Delete an existing OAuth 2.0 Client by its ID.\n\nOAuth 2.0 clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities. To manage ORY Hydra, you will need an OAuth 2.0 Client as well. Make sure that this endpoint is well protected and only callable by first-party components."
          }
      },
      "/rs/{rsid}/openapis/{version}/access-keys/{akid}/roles": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "akid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/role"
                                  }
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_access_keys_roles",
              "summary": "get_access_keys_roles"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/set_roles_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "akid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/role"
                                  }
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_access_keys_roles",
              "summary": "put_access_keys_roles"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "akid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Defaults to 50.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "格式: cloumn[:1]\ncloumn默认为降序,cloumn:1为升序\ncloumn可选: version; created_at; updated_at",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "description": "预留字段，暂未使用。",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_rs_byID_openapis_response_page"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "get_rs_byID_openapis",
              "summary": "get_rs_byID_openapis"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "$ref": "#/components/schemas/post_rs_byID_openapis_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/openapi"
                              }
                          }
                      },
                      "description": "create success."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "post_rs_byID_openapis",
              "summary": "post_rs_byID_openapis"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/allowed": {
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/post_allowed_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "authz"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/post_allowed_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/post_allowed_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "post_allowed",
              "summary": "post_allowed",
              "description": "Use this endpoint to check if a request is allowed or not. If the request is allowed, a 200 response with {\"allowed\":\"true\"} will be sent. If the request is denied, a 403 response with {\"allowed\":\"false\"} will be sent instead."
          }
      },
      "/profile/roles": {
          "get": {
              "tags": [
                  "profile"
              ],
              "parameters": [
                  {
                      "name": "page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "per_page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_pagination_response"
                              }
                          }
                      },
                      "description": "Roles successfully retrieved. data is array of role"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_profile_roles",
              "summary": "get_profile_roles",
              "description": "List the the roles associated with current identity & logined system"
          }
      },
      "/rs/{rsid}/rbac/roles/{rid}/identities": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/identity"
                                  }
                              }
                          }
                      },
                      "description": ""
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_roles_identities",
              "summary": "get_rs_roles_identities",
              "description": "get all identities of this role"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/post_rs_roles_identities_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "description": ""
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "post_rs_roles_identities",
              "summary": "post_rs_roles_identities",
              "description": "add identities for this role"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "rid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/rbac/roles/{rid}/identities/{id}": {
          "delete": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "rid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "id",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": ""
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "delete_rs_roles_identities",
              "summary": "delete_rs_roles_identities"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "rid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/auth/logout": {
          "get": {
              "tags": [
                  "auth"
              ],
              "parameters": [
                  {
                      "name": "logout_challenge",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "302": {
                      "description": "redirect url"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Unauthorized"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Internal Server Error"
                  }
              },
              "operationId": "get_logout",
              "summary": "get_logout"
          }
      },
      "/rs/{rsid}/openapis/{version}/gateway": {
          "get": {
              "tags": [
                  "rs"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/gateway_config"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_openapi_gateway_config",
              "summary": "get_openapi_gateway_config"
          },
          "post": {
              "tags": [
                  "rs"
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/gateway_config"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "create_openapi_gateway_config",
              "summary": "create_openapi_gateway_config"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "responses": {
                  "204": {
                      "description": "no content"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "delete_openapi_gateway_config",
              "summary": "delete_openapi_gateway_config"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/access-keys/{akid}/gateway": {
          "get": {
              "tags": [
                  "rs"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/gateway_hmac_credential"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_accesskey_gateway_config",
              "summary": "get_accesskey_gateway_config"
          },
          "post": {
              "tags": [
                  "rs"
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/gateway_hmac_credential"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "create_accesskey_gateway_config",
              "summary": "create_accesskey_gateway_config"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "responses": {
                  "204": {
                      "description": "no content"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "delete_accesskey_gateway_config",
              "summary": "delete_accesskey_gateway_config"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "akid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/profile/openapis/{akid}/json": {
          "get": {
              "tags": [
                  "profile"
              ],
              "parameters": [
                  {
                      "name": "akid",
                      "description": "id of access key",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {

                          }
                      },
                      "description": "return openapi"
                  },
                  "400": {
                      "description": "400"
                  },
                  "401": {
                      "description": "401"
                  },
                  "403": {
                      "description": "is not allowed"
                  },
                  "500": {
                      "description": "500"
                  }
              },
              "operationId": "get_openapi_json_by_ak_ID",
              "summary": "get_openapi_json_by_ak_ID"
          },
          "parameters": [
              {
                  "name": "akid",
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/json": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {

                          }
                      },
                      "description": "return openapi"
                  },
                  "400": {
                      "description": "400"
                  },
                  "401": {
                      "description": "401"
                  },
                  "403": {
                      "description": "is not allowed"
                  },
                  "500": {
                      "description": "500"
                  }
              },
              "operationId": "get_openapi_json",
              "summary": "get_openapi_json"
          }
      },
      "/rs/{rsid}/openapis/{version}": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/openapi"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: read:resource_servers."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "get_rs_byID_openapis_byVersion",
              "summary": "get_rs_byID_openapis_byVersion"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Some fields cannot be read with the permissions granted by the bearer token scopes. The message will vary depending on the fields and the scopes."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "delete_rs_byID_openapis_byVersion",
              "summary": "delete_rs_byID_openapis_byVersion",
              "description": "delete api self\ndelete all ak/sk\ndelete all ak permissions"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "$ref": "#/components/schemas/patch_rs_byID_openapis_byVersion_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/openapi"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: read:resource_servers."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error"
                  }
              },
              "operationId": "patch_rs_byID_openapis_byVersion"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/tenants/{oid}/members": {
          "get": {
              "tags": [
                  "tenants"
              ],
              "parameters": [
                  {
                      "name": "oid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "page",
                      "description": "Page index of the results to return. First page is 1.",
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "per_page",
                      "description": "Number of results per page. Paging is disabled if parameter not sent.",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "sort",
                      "description": "Field to sort by. Use <code>field:order</code> where order is <code>1</code> for ascending and <code>-1</code> for descending. e.g. <code>created_at:1</code>",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "description": "书写格式：\nfieldname1:value,fieldname2:a*,fieldname3:[startvalue to endvalue]\n\nfieldname和json里面的fieldname一致",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_identities_response_page"
                              }
                          }
                      },
                      "description": "identities successfully retrieved."
                  },
                  "400": {
                      "description": "You can only page through the first 1000 records. See https://auth0.com/docs/identities/search/v3/view-search-results-by-page#limitation."
                  },
                  "401": {
                      "description": "Invalid token."
                  },
                  "403": {
                      "description": "Insufficient scope, expected any of: read:identities."
                  },
                  "503": {
                      "description": "The query exceeded the timeout. Please try refining your search criteria. See https://auth0.com/docs/best-practices/search-best-practices."
                  }
              },
              "operationId": "get_organizations_byID_identities",
              "summary": "get all identities",
              "description": ""
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/post_identity_request_identity"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "tenants"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/identity"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "description": "You can only page through the first 1000 records. See https://auth0.com/docs/identities/search/v3/view-search-results-by-page#limitation."
                  },
                  "401": {
                      "description": "Invalid token."
                  },
                  "403": {
                      "description": "Insufficient scope, expected any of: post:identities."
                  },
                  "503": {
                      "description": "The query exceeded the timeout. Please try refining your search criteria. See https://auth0.com/docs/best-practices/search-best-practices."
                  }
              },
              "operationId": "post_tenant_member",
              "summary": "create_tenant_member",
              "description": "新建identity并设置为tenant成员"
          },
          "parameters": [
              {
                  "name": "oid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/access-keys/{akid}/secret": {
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/get_secret_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_secret_response"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_accesskey_secret",
              "summary": "get_accesskey_secret",
              "description": "get access-key secret"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "akid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/secret": {
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/get_secret_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_secret_response"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_client_secret",
              "summary": "get_client_secret"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/profile/access-keys/download": {
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/get_secret_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "profile"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "text/csv": {

                          }
                      },
                      "description": "success"
                  }
              },
              "operationId": "download_accesskeys",
              "summary": "download_accesskeys"
          }
      },
      "/zone/zoneinfo": {
          "get": {
              "tags": [
                  "zone"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/zoneinfo"
                              }
                          }
                      },
                      "description": "zoneinfo"
                  }
              },
              "summary": "get_zoneinfo"
          }
      },
      "/zone/products": {
          "get": {
              "tags": [
                  "zone"
              ],
              "parameters": [
                  {
                      "name": "name",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query",
                      "required": false
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/product"
                                  }
                              }
                          }
                      },
                      "description": "get product list"
                  }
              },
              "summary": "get_products"
          }
      },
      "/access-keys/{id}/master": {
          "get": {
              "tags": [
                  "accesskey"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/identity"
                              }
                          }
                      },
                      "description": "success"
                  }
              },
              "operationId": "get_accesskey_master",
              "summary": "get_accesskey_master",
              "description": "get master identity of the accesskey"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/access-keys/{id}": {
          "get": {
              "tags": [
                  "accesskey"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/rs_access_key"
                              }
                          }
                      },
                      "description": "success"
                  }
              },
              "operationId": "get_accesskey",
              "summary": "get_accesskey",
              "description": "get accesskey by id"
          }
      },
      "/auth/providers": {
          "get": {
              "tags": [
                  "auth"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/profile_provider"
                                  }
                              }
                          }
                      },
                      "description": "success"
                  }
              },
              "operationId": "get_providers",
              "summary": "GetProviders",
              "description": "get supported provider list"
          }
      },
      "/auth": {
          "get": {
              "tags": [
                  "auth"
              ],
              "parameters": [
                  {
                      "name": "name",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query",
                      "required": true
                  },
                  {
                      "name": "code",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/provider_account"
                              }
                          }
                      },
                      "description": "login with 3rd party success, but there is no related IAM account, need to do self-register"
                  },
                  "201": {
                      "description": "bingding success, the user login and bind with current iam account"
                  },
                  "302": {
                      "description": "login with 3rd-party success, and the account was binded, redirect to home page;\n"
                  }
              },
              "operationId": "auth",
              "summary": "auth",
              "description": "auth by 3rd provider & get user profile from provider"
          }
      },
      "/profile/providers": {
          "get": {
              "tags": [
                  "profile"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/provider"
                                  }
                              }
                          }
                      },
                      "description": "success"
                  }
              },
              "operationId": "get_provider_list",
              "summary": "GetProviders",
              "description": "get supported provider list"
          }
      },
      "/profile/providers/{id}": {
          "delete": {
              "tags": [
                  "profile"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  }
              },
              "operationId": "unbind",
              "summary": "unbind",
              "description": "unbind"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/auth/bind": {
          "post": {
              "requestBody": {
                  "description": "identity and provider account",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/post_identity_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "auth"
              ],
              "responses": {
                  "302": {
                      "description": "success"
                  }
              },
              "operationId": "bind",
              "summary": "bind",
              "description": "register new identity and bind with 3d party account"
          }
      },
      "/rs/{rsid}/rbac/permissions/batch": {
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/permission"
                              }
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/permission"
                              }
                          }
                      },
                      "description": " "
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "batch_create_rs_permissions",
              "summary": "batch_create_rs_permissions"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/identities/check": {
          "get": {
              "tags": [
                  "identities"
              ],
              "parameters": [
                  {
                      "name": "email",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "name",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "phone_number",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/profile"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "identity not found."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "check_identity",
              "summary": "check_identity"
          }
      },
      "/identities/export": {
          "get": {
              "tags": [
                  "identities"
              ],
              "parameters": [
                  {
                      "name": "q",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "text/csv": {

                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "export_identities",
              "summary": "export_identities",
              "description": "导出账号"
          }
      },
      "/identities/{id}/status": {
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/put_identity_status"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "identities"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "identity not found."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "update_identity_status",
              "summary": "update_identity_status",
              "description": "启用/停用账号，更新有效期"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/identities/logs": {
          "get": {
              "tags": [
                  "identities"
              ],
              "parameters": [
                  {
                      "name": "action",
                      "description": "login",
                      "schema": {
                          "enum": [
                              "login",
                              "logout"
                          ],
                          "type": "string"
                      },
                      "in": "query",
                      "required": true
                  },
                  {
                      "name": "start_time",
                      "description": "",
                      "schema": {
                          "format": "date-time",
                          "type": "string"
                      },
                      "in": "query",
                      "required": true
                  },
                  {
                      "name": "end_time",
                      "description": "",
                      "schema": {
                          "format": "date-time",
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "identity_id",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "client_ip",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  },
                  {
                      "name": "per_page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "resource",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_pagination_response"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_identities_log",
              "summary": "get_identities_log"
          }
      },
      "/organizations/{oid}/root": {
          "get": {
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/organization"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "no root."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_root_org",
              "summary": "get_root_org"
          },
          "parameters": [
              {
                  "name": "oid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/organizations/{oid}/suborgs": {
          "get": {
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/organization_tree"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_sub_organizations",
              "summary": "get_sub_organizations"
          },
          "parameters": [
              {
                  "name": "oid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/identities/{id}/avatar": {
          "put": {
              "requestBody": {
                  "description": "photo",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/put_profile_photo_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "identities"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "update_identity_profile_photo",
              "summary": "update_identity_profile_photo",
              "description": "更新头像"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/tenants/{oid}/members/{aid}": {
          "get": {
              "tags": [
                  "tenants"
              ],
              "parameters": [
                  {
                      "name": "oid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "aid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/identity"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "description": "You can only page through the first 1000 records. See https://auth0.com/docs/identities/search/v3/view-search-results-by-page#limitation."
                  },
                  "401": {
                      "description": "Invalid token."
                  },
                  "403": {
                      "description": "Insufficient scope, expected any of: read:identities."
                  },
                  "503": {
                      "description": "The query exceeded the timeout. Please try refining your search criteria. See https://auth0.com/docs/best-practices/search-best-practices."
                  }
              },
              "operationId": "get_tenant_member",
              "summary": "get_tenant_member",
              "description": "获取tenant成员信息"
          },
          "post": {
              "tags": [
                  "tenants"
              ],
              "responses": {
                  "201": {
                      "description": "success"
                  },
                  "400": {
                      "description": "invalid parameter"
                  },
                  "401": {
                      "description": "Invalid token."
                  },
                  "403": {
                      "description": "Insufficient scope, expected any of: read:identities."
                  },
                  "503": {
                      "description": "The query exceeded the timeout. Please try refining your search criteria. See https://auth0.com/docs/best-practices/search-best-practices."
                  }
              },
              "operationId": "add_tenant_member",
              "summary": "add_tenant_member",
              "description": "将某个identity设置为tenant用户"
          },
          "delete": {
              "tags": [
                  "tenants"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "description": "You can only page through the first 1000 records. See https://auth0.com/docs/identities/search/v3/view-search-results-by-page#limitation."
                  },
                  "401": {
                      "description": "Invalid token."
                  },
                  "403": {
                      "description": "Insufficient scope, expected any of: delete:identities."
                  },
                  "503": {
                      "description": "The query exceeded the timeout. Please try refining your search criteria. See https://auth0.com/docs/best-practices/search-best-practices."
                  }
              },
              "operationId": "delete_tenant_member",
              "summary": "delete_tenant_member",
              "description": "删除tenant成员，如果该identity不再属于任何org，则标记为删除"
          },
          "parameters": [
              {
                  "name": "oid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "aid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/organizations/{oid}": {
          "get": {
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/organization"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid token."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: get:organization."
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "not found. invalid oid"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_organizations_byID",
              "summary": "get_organizations_byID"
          },
          "delete": {
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "delete_organization_byID",
              "summary": "delete_organization_by_id",
              "description": "delete_orgnization_by_id"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/organization"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/organization"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid token."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: get:organization."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "patch_organizations_byID",
              "summary": "patch_organizations_byID",
              "description": "supported update name, short_name, owner_id, description"
          },
          "parameters": [
              {
                  "name": "oid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/access-keys/{akid}/ratelimit": {
          "get": {
              "tags": [
                  "accesskeys"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ratelimit_config"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_accesskey_ratelimit",
              "summary": "get_accesskey_ratelimit",
              "description": "get access key ratelimit cofig"
          },
          "parameters": [
              {
                  "name": "akid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/organizations/{oid}/members": {
          "get": {
              "tags": [
                  "organizations"
              ],
              "parameters": [
                  {
                      "name": "page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  },
                  {
                      "name": "per_page",
                      "description": "",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  },
                  {
                      "name": "sort",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "q",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/get_organizations_members_response_page"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_organizations_members",
              "summary": "get_organizations_members",
              "description": ""
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/set_members_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/identity"
                                  }
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid token."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: get:organization."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "put_organizations_members",
              "summary": "put_organizations_members",
              "description": "if request body is empty, it will delete all members of this org\nif the request body is not empty, it will delete all existing members and then add the given values as new members\n"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/set_members_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "201": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid token."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: get:organization."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "post_organizations_members",
              "summary": "post_organizations_members",
              "description": "add org member"
          },
          "parameters": [
              {
                  "name": "oid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/organizations/{oid}/members/{aid}": {
          "get": {
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/organization_member"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_org_member_by_id",
              "summary": "get_org_member_by_id"
          },
          "post": {
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "201": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "add_org_member_by_id",
              "summary": "add_org_member_by_id"
          },
          "delete": {
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "delete_org_member_by_id",
              "summary": "delete_org_member_by_id"
          },
          "parameters": [
              {
                  "name": "oid",
                  "description": "organization id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "aid",
                  "description": "identity ID",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/identities/{id}": {
          "get": {
              "tags": [
                  "identities"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/identity"
                              }
                          }
                      },
                      "description": "identity successfully retrieved."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "identity not found. invlaid aid"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_identitiesi_byID",
              "summary": "get_identities_byID",
              "description": "Retrieve identity details. A list of fields to include or exclude may also be specified."
          },
          "delete": {
              "tags": [
                  "identities"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "identity successfully deleted."
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request URI. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: delete:identities,delete:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "delete_identities_byID",
              "summary": "delete_identities_byID",
              "description": "Delete a identity."
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/identity"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "identities"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/identity"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "patch_identity_byID",
              "summary": "patch_identity_byID"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/organizations/{oid}/logintypes": {
          "get": {
              "tags": [
                  "organizations"
              ],
              "parameters": [
                  {
                      "name": "login_type",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/login_type_config"
                                  }
                              }
                          }
                      },
                      "description": "success"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid token."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: get:organization."
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "not found. invalid oid"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "get_login_types",
              "summary": "get_login_types"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/login_type_config"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/id_object"
                              }
                          }
                      },
                      "description": "success            "
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid token."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: get:organization."
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "not found. invalid oid"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "add_login_type",
              "summary": "add_login_type"
          },
          "parameters": [
              {
                  "name": "oid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/organizations/{oid}/logintypes/{tid}": {
          "delete": {
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "204": {
                      "description": "success            "
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid token."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope, expected any of: get:organization."
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "not found. invalid oid"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "delete_login_type",
              "summary": "delete_login_type"
          },
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/login_type_config"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "organizations"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  }
              },
              "operationId": "update_login_type",
              "summary": "update_login_type"
          },
          "parameters": [
              {
                  "name": "oid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "tid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/identities/{id}/password": {
          "patch": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/patch_profile_password_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "identities"
              ],
              "parameters": [
                  {
                      "name": "validate_old_password",
                      "description": "",
                      "schema": {
                          "type": "boolean"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid body."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "change_password",
              "summary": "change_password"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/public/validate": {
          "get": {
              "tags": [
                  "public"
              ],
              "parameters": [
                  {
                      "name": "email",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "name",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "phone_number",
                      "description": "",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "204": {
                      "description": "no conflict"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "409": {
                      "description": "name/email/phone existed"
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "ValidateUserConflict",
              "summary": "ValidateUserConflict"
          }
      },
      "/identities/{id}/activate": {
          "put": {
              "tags": [
                  "identities"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "activate_identity",
              "summary": "activate_identity"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/public/register": {
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/post_identity_request_identity"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "public"
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/id_object"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "register",
              "summary": "register"
          }
      },
      "/identities/{id}/disable": {
          "put": {
              "tags": [
                  "identities"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "disable_identity",
              "summary": "disable_identity"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/openapis/{version}/gateway/plugins": {
          "get": {
              "tags": [
                  "rs"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/openapi_gateway_plugin_config"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_openapi_gateway_plugins"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/openapi_gateway_plugin_config"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  },
                  {
                      "name": "version",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_openapi_gateway_plugins"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              },
              {
                  "name": "version",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/approval/identities/reject": {
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/approval_identities_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "approval"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "reject_identity",
              "summary": "disable_identity"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/approval/identities/accept": {
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/approval_identities_request"
                          }
                      }
                  }
              },
              "tags": [
                  "approval"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid request query string. The message will vary depending on the cause."
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Invalid signature received for JSON Web Token validation."
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "Insufficient scope; expected any of: read:identities,read:current_identity."
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "accept_identity",
              "summary": "activate_identity"
          },
          "parameters": [
              {
                  "name": "id",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/waf": {
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/wafconfig"
                                  }
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_waf",
              "summary": "get_rs_waf"
          }
      },
      "/rs/{rsid}/rbac/gateway": {
          "summary": "curd kong上的gateway config 信息",
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/gateway_config"
                                  }
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_gateway_config_by_id",
              "summary": "get_rs_gateway_config_by_id"
          },
          "put": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/gateway_config"
                                  }
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_rs_gateway_config",
              "summary": "put_rs_gateway_config"
          },
          "delete": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "no content"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "delete_rs_gateway_config_by_id",
              "summary": "delete_rs_gateway_config_by_id"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/identities/bulk/activate": {
          "post": {
              "requestBody": {
                  "description": "array of identity's id",
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "array",
                              "items": {
                                  "type": "string"
                              }
                          },
                          "examples": {
                              "example1": {
                                  "value": [
                                      "identity1 id",
                                      "identity2 id"
                                  ]
                              }
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "identities"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "bulk_activate_identities",
              "summary": "bulk_activate_identities",
              "description": "bulk activate identities"
          }
      },
      "/identities/bulk/disable": {
          "post": {
              "requestBody": {
                  "description": "array of identity's id",
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "array",
                              "items": {
                                  "type": "string"
                              }
                          },
                          "examples": {
                              "example1": {
                                  "value": [
                                      "identity1 id",
                                      "identity2 id"
                                  ]
                              }
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "identities"
              ],
              "responses": {
                  "204": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": "internal server error."
                  }
              },
              "operationId": "bulk_disable_identities",
              "summary": "bulk_disable_identities",
              "description": "bulk disable identities"
          }
      },
      "/rs/{rsid}/rbac/gateway/config": {
          "summary": "curd 数据库中gateway config信息",
          "get": {
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/webui_gateway_config_get_response"
                              }
                          }
                      },
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "get_rs_gateway_db_config_by_id",
              "summary": "get_rs_gateway_db_config_by_id"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/webui_gateway_config_put_request"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_rs_gateway_db_config",
              "summary": "put_rs_gateway_db_config"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      },
      "/rs/{rsid}/rbac/gateway/config/transform": {
          "summary": "transform gateway config version",
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/gateway_config_transform"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  "rs"
              ],
              "parameters": [
                  {
                      "name": "rsid",
                      "schema": {
                          "type": "string"
                      },
                      "in": "path",
                      "required": true
                  }
              ],
              "responses": {
                  "201": {
                      "description": "success"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "403": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  },
                  "500": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/generic_error_response"
                              }
                          }
                      },
                      "description": ""
                  }
              },
              "operationId": "put_rs_gateway_config_transform",
              "summary": "put_rs_gateway_config_transform"
          },
          "parameters": [
              {
                  "name": "rsid",
                  "schema": {
                      "type": "string"
                  },
                  "in": "path",
                  "required": true
              }
          ]
      }
  },
  "components": {
      "schemas": {
          "patch_profile_password_request": {
              "description": "",
              "required": [
                  "old_password",
                  "new_password"
              ],
              "type": "object",
              "properties": {
                  "old_password": {
                      "description": "",
                      "type": "string"
                  },
                  "new_password": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "patch_identities_byID_permissions_request": {
              "required": [
                  "permissions"
              ],
              "type": "object",
              "properties": {
                  "permissions": {
                      "description": "List of permissions to add to this identity.",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "patch_identities_byID_roles_request": {
              "required": [
                  "roles"
              ],
              "type": "object",
              "properties": {
                  "roles": {
                      "description": "List of roles IDs to associated with the identity.",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "patch_roles_byID_identities_request": {
              "required": [
                  "identities"
              ],
              "type": "object",
              "properties": {
                  "identities": {
                      "description": "identity_id's of the identities to assign the role to.",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "get_identities_byID_permissions_response": {
              "description": "",
              "required": [
                  "total",
                  "data"
              ],
              "type": "object",
              "properties": {
                  "total": {
                      "description": "",
                      "type": "integer"
                  },
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/permission"
                      }
                  }
              }
          },
          "get_identities_byID_roles_response": {
              "description": "",
              "required": [
                  "data"
              ],
              "type": "object",
              "properties": {
                  "total": {
                      "description": "",
                      "type": "integer"
                  },
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/role"
                      }
                  }
              }
          },
          "get_roles_response": {
              "required": [
                  "total",
                  "payload"
              ],
              "type": "object",
              "properties": {
                  "total": {
                      "type": "integer"
                  },
                  "payload": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/role"
                      }
                  }
              }
          },
          "post_clients_request": {
              "title": "Root Type for post_clients_request",
              "description": "",
              "type": "object",
              "properties": {
                  "allowed_cors_origins": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "audience": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "backchannel_logout_session_required": {
                      "type": "boolean"
                  },
                  "backchannel_logout_uri": {
                      "type": "string"
                  },
                  "client_id": {
                      "type": "string"
                  },
                  "client_name": {
                      "type": "string"
                  },
                  "client_secret": {
                      "type": "string"
                  },
                  "client_secret_expires_at": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "client_uri": {
                      "type": "string"
                  },
                  "contacts": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "created_at": {
                      "format": "date-time",
                      "type": "string"
                  },
                  "frontchannel_logout_session_required": {
                      "type": "boolean"
                  },
                  "frontchannel_logout_uri": {
                      "type": "string"
                  },
                  "grant_types": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "jwks_uri": {
                      "type": "string"
                  },
                  "logo_uri": {
                      "type": "string"
                  },
                  "owner": {
                      "type": "string"
                  },
                  "policy_uri": {
                      "type": "string"
                  },
                  "post_logout_redirect_uris": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "redirect_uris": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "request_object_signing_alg": {
                      "type": "string"
                  },
                  "request_uris": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "response_types": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "scope": {
                      "type": "string"
                  },
                  "sector_identifier_uri": {
                      "type": "string"
                  },
                  "subject_type": {
                      "type": "string"
                  },
                  "token_endpoint_auth_method": {
                      "type": "string"
                  },
                  "tos_uri": {
                      "type": "string"
                  },
                  "updated_at": {
                      "format": "date-time",
                      "type": "string"
                  },
                  "userinfo_signed_response_alg": {
                      "type": "string"
                  }
              },
              "example": {
                  "allowed_cors_origins": [
                      "string"
                  ],
                  "audience": [
                      "string"
                  ],
                  "backchannel_logout_session_required": true,
                  "backchannel_logout_uri": "string",
                  "client_id": "string",
                  "client_name": "string",
                  "client_secret": "string",
                  "client_secret_expires_at": 0,
                  "client_uri": "string",
                  "contacts": [
                      "string"
                  ],
                  "created_at": "2020-04-06T12:34:42.000Z",
                  "frontchannel_logout_session_required": true,
                  "frontchannel_logout_uri": "string",
                  "grant_types": [
                      "string"
                  ],
                  "jwks": {

                  },
                  "jwks_uri": "string",
                  "logo_uri": "string",
                  "metadata": {

                  },
                  "owner": "string",
                  "policy_uri": "string",
                  "post_logout_redirect_uris": [
                      "string"
                  ],
                  "redirect_uris": [
                      "string"
                  ],
                  "request_object_signing_alg": "string",
                  "request_uris": [
                      "string"
                  ],
                  "response_types": [
                      "string"
                  ],
                  "scope": "string",
                  "sector_identifier_uri": "string",
                  "subject_type": "string",
                  "token_endpoint_auth_method": "string",
                  "tos_uri": "string",
                  "updated_at": "2020-04-06T12:34:42.000Z",
                  "userinfo_signed_response_alg": "string"
              }
          },
          "post_login_request": {
              "title": "Root Type for Longin",
              "description": "",
              "required": [
                  "challenge",
                  "account",
                  "password"
              ],
              "type": "object",
              "properties": {
                  "password": {
                      "type": "string"
                  },
                  "account": {
                      "description": "email/phone number\n？phone same as id",
                      "type": "string"
                  },
                  "challenge": {
                      "description": "",
                      "type": "string"
                  },
                  "token": {
                      "description": "",
                      "type": "string"
                  },
                  "captcha": {
                      "description": "",
                      "type": "string"
                  },
                  "credential_type": {
                      "description": "default is password",
                      "enum": [
                          "password",
                          "ad",
                          "oidc",
                          "adfs"
                      ],
                      "type": "string"
                  }
              },
              "example": {
                  "identity_name": "some text",
                  "password": "some text",
                  "login_challenge": "some text"
              }
          },
          "generic_error_message": {
              "description": "",
              "required": [
                  "code",
                  "message"
              ],
              "type": "object",
              "properties": {
                  "code": {
                      "$ref": "#/components/schemas/generic_error_code",
                      "description": "internal business error code"
                  },
                  "message": {
                      "description": "business message---i18n",
                      "type": "string"
                  }
              }
          },
          "pagination": {
              "description": "",
              "required": [
                  "total",
                  "current_page",
                  "per_page"
              ],
              "type": "object",
              "properties": {
                  "total": {
                      "description": "",
                      "type": "integer"
                  },
                  "current_page": {
                      "description": "",
                      "type": "integer"
                  },
                  "per_page": {
                      "description": "",
                      "type": "integer"
                  }
              }
          },
          "get_identities_response_page": {
              "description": "",
              "required": [
                  "data"
              ],
              "type": "object",
              "properties": {
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  },
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/identity"
                      }
                  }
              }
          },
          "generic_error_response": {
              "description": "",
              "required": [
                  "code",
                  "message",
                  "details"
              ],
              "type": "object",
              "properties": {
                  "code": {
                      "description": "http status code",
                      "type": "integer"
                  },
                  "message": {
                      "description": "http message",
                      "type": "string"
                  },
                  "details": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/generic_error_message"
                      }
                  }
              }
          },
          "client": {
              "title": "Client represents an OAuth 2.0 Client.",
              "type": "object",
              "properties": {
                  "allowed_cors_origins": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "audience": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "backchannel_logout_session_required": {
                      "description": "Boolean value specifying whether the RP requires that a sid (session ID) Claim be included in the Logout\nToken to identify the RP session with the OP when the backchannel_logout_uri is used.\nIf omitted, the default value is false.",
                      "type": "boolean"
                  },
                  "backchannel_logout_uri": {
                      "description": "RP URL that will cause the RP to log itself out when sent a Logout Token by the OP.",
                      "type": "string"
                  },
                  "client_id": {
                      "description": "ClientID  is the id for this client.",
                      "type": "string"
                  },
                  "client_name": {
                      "description": "Name is the human-readable string name of the client to be presented to the\nend-user during authorization.",
                      "type": "string"
                  },
                  "client_secret": {
                      "description": "Secret is the client's secret. The secret will be included in the create request as cleartext, and then\nnever again. The secret is stored using BCrypt so it is impossible to recover it. Tell your users\nthat they need to write the secret down as it will not be made available again.",
                      "type": "string"
                  },
                  "client_secret_expires_at": {
                      "format": "int64",
                      "description": "SecretExpiresAt is an integer holding the time at which the client\nsecret will expire or 0 if it will not expire. The time is\nrepresented as the number of seconds from 1970-01-01T00:00:00Z as\nmeasured in UTC until the date/time of expiration.\n\nThis feature is currently not supported and it's value will always\nbe set to 0.",
                      "type": "integer"
                  },
                  "client_uri": {
                      "description": "ClientURI is an URL string of a web page providing information about the client.\nIf present, the server SHOULD display this URL to the end-user in\na clickable fashion.",
                      "type": "string"
                  },
                  "contacts": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "created_at": {
                      "format": "date-time",
                      "description": "CreatedAt returns the timestamp of the client's creation.",
                      "type": "string"
                  },
                  "frontchannel_logout_session_required": {
                      "description": "Boolean value specifying whether the RP requires that iss (issuer) and sid (session ID) query parameters be\nincluded to identify the RP session with the OP when the frontchannel_logout_uri is used.\nIf omitted, the default value is false.",
                      "type": "boolean"
                  },
                  "frontchannel_logout_uri": {
                      "description": "RP URL that will cause the RP to log itself out when rendered in an iframe by the OP. An iss (issuer) query\nparameter and a sid (session ID) query parameter MAY be included by the OP to enable the RP to validate the\nrequest and to determine which of the potentially multiple sessions is to be logged out; if either is\nincluded, both MUST be.",
                      "type": "string"
                  },
                  "grant_types": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "jwks_uri": {
                      "description": "URL for the Client's JSON Web Key Set [JWK] document. If the Client signs requests to the Server, it contains\nthe signing key(s) the Server uses to validate signatures from the Client. The JWK Set MAY also contain the\nClient's encryption keys(s), which are used by the Server to encrypt responses to the Client. When both signing\nand encryption keys are made available, a use (Key Use) parameter value is REQUIRED for all keys in the referenced\nJWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both\nsignatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used\nto provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST\nmatch those in the certificate.",
                      "type": "string"
                  },
                  "logo_uri": {
                      "description": "LogoURI is an URL string that references a logo for the client.",
                      "type": "string"
                  },
                  "owner": {
                      "description": "Owner is a string identifying the owner of the OAuth 2.0 Client.",
                      "type": "string"
                  },
                  "policy_uri": {
                      "description": "PolicyURI is a URL string that points to a human-readable privacy policy document\nthat describes how the deployment organization collects, uses,\nretains, and discloses personal data.",
                      "type": "string"
                  },
                  "post_logout_redirect_uris": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "redirect_uris": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "request_object_signing_alg": {
                      "description": "JWS [JWS] alg algorithm [JWA] that MUST be used for signing Request Objects sent to the OP. All Request Objects\nfrom this Client MUST be rejected, if not signed with this algorithm.",
                      "type": "string"
                  },
                  "request_uris": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "response_types": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "scope": {
                      "description": "Scope is a string containing a space-separated list of scope values (as\ndescribed in Section 3.3 of OAuth 2.0 [RFC6749]) that the client\ncan use when requesting access tokens.",
                      "pattern": "([a-zA-Z0-9\\.\\*]+\\s?)+",
                      "type": "string"
                  },
                  "sector_identifier_uri": {
                      "description": "URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a\nfile with a single JSON array of redirect_uri values.",
                      "type": "string"
                  },
                  "subject_type": {
                      "description": "SubjectType requested for responses to this Client. The subject_types_supported Discovery parameter contains a\nlist of the supported subject_type values for this server. Valid types include `pairwise` and `public`.",
                      "type": "string"
                  },
                  "token_endpoint_auth_method": {
                      "description": "Requested Client Authentication method for the Token Endpoint. The options are client_secret_post,\nclient_secret_basic, private_key_jwt, and none.",
                      "type": "string"
                  },
                  "tos_uri": {
                      "description": "TermsOfServiceURI is a URL string that points to a human-readable terms of service\ndocument for the client that describes a contractual relationship\nbetween the end-user and the client that the end-user accepts when\nauthorizing the client.",
                      "type": "string"
                  },
                  "updated_at": {
                      "format": "date-time",
                      "description": "UpdatedAt returns the timestamp of the last update.",
                      "type": "string"
                  },
                  "userinfo_signed_response_alg": {
                      "description": "JWS alg algorithm [JWA] REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT\n[JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims\nas a UTF-8 encoded JSON object using the application/json content-type.",
                      "type": "string"
                  }
              }
          },
          "hydra_error": {
              "title": "Error response",
              "description": "Error responses are sent when an error (e.g. unauthorized, bad request, ...) occurred.",
              "required": [
                  "error"
              ],
              "type": "object",
              "properties": {
                  "debug": {
                      "description": "Debug contains debug information. This is usually not available and has to be enabled.",
                      "type": "string",
                      "example": "The database adapter was unable to find the element"
                  },
                  "error": {
                      "description": "Name is the error name.",
                      "type": "string",
                      "example": "The requested resource could not be found"
                  },
                  "error_description": {
                      "description": "Description contains further information on the nature of the error.",
                      "type": "string",
                      "example": "Object with ID 12345 does not exist"
                  },
                  "status_code": {
                      "format": "int64",
                      "description": "Code represents the error status code (404, 403, 401, ...).",
                      "type": "integer",
                      "example": 404
                  }
              }
          },
          "get_rs_response_page": {
              "description": "",
              "required": [
                  "data"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/rs"
                      }
                  },
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  }
              }
          },
          "post_rs_request": {
              "title": "Root Type for post_resource-servers_request",
              "description": "",
              "required": [
                  "name",
                  "description",
                  "owner_id",
                  "gateway_configs",
                  "public_domain"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "description": "allowed char: alpa,num,-,_",
                      "type": "string"
                  },
                  "description": {
                      "description": "",
                      "type": "string"
                  },
                  "owner_id": {
                      "description": "",
                      "type": "string"
                  },
                  "gateway_configs": {
                      "description": "if the '/'' is not in protected path, we will add a default route to passthrough the '/'",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/rs_gateway_config"
                      }
                  },
                  "public_domain": {
                      "description": "",
                      "type": "string"
                  },
                  "gateway_admin_url": {
                      "description": "",
                      "type": "string"
                  }
              },
              "example": {
                  "name": "some text",
                  "description": "some text",
                  "owner_id": "some text",
                  "gateway_configs": [
                      {
                          "upstream": "some text",
                          "excludes": [
                              "some text",
                              "some text"
                          ],
                          "protected_path": "some text"
                      },
                      {
                          "upstream": "some text",
                          "excludes": [
                              "some text",
                              "some text"
                          ],
                          "protected_path": "some text"
                      }
                  ],
                  "public_domain": "some text"
              }
          },
          "patch_rs_roles_byRID_request": {
              "description": "",
              "required": [
                  "description"
              ],
              "type": "object",
              "properties": {
                  "description": {
                      "description": "",
                      "type": "string"
                  },
                  "name": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "get_rs_response": {
              "required": [
                  "description",
                  "gateway_admin_url",
                  "internal_url"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "description": "ID of the API (resource server).",
                      "type": "string"
                  },
                  "name": {
                      "description": "Friendly name for this resource server. Can not contain `<` or `>` characters.",
                      "type": "string"
                  },
                  "description": {
                      "description": "",
                      "type": "string"
                  },
                  "gateway_admin_url": {
                      "description": "",
                      "type": "string"
                  },
                  "internal_url": {
                      "description": "",
                      "type": "string"
                  },
                  "update_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "patch_rs_permissions_byPID_request": {
              "description": "",
              "required": [
                  "description"
              ],
              "type": "object",
              "properties": {
                  "description": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "list_permissions_response": {
              "description": "",
              "required": [
                  "data",
                  "pagination"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/permission"
                      }
                  },
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  }
              }
          },
          "set_permissions_request": {
              "description": "",
              "required": [
                  "permissions"
              ],
              "type": "object",
              "properties": {
                  "permissions": {
                      "description": "array of permission id",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "profile": {
              "description": "",
              "required": [
                  "identity"
              ],
              "type": "object",
              "properties": {
                  "identity": {
                      "$ref": "#/components/schemas/identity",
                      "description": "personal info"
                  },
                  "organization": {
                      "$ref": "#/components/schemas/organization",
                      "description": ""
                  }
              }
          },
          "permission_simple": {
              "required": [
                  "domain",
                  "resource",
                  "action"
              ],
              "type": "object",
              "properties": {
                  "domain": {
                      "description": "id of the resource server",
                      "type": "string"
                  },
                  "resource": {
                      "description": "",
                      "type": "string"
                  },
                  "action": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "role_simple": {
              "required": [
                  "domain",
                  "name"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "description": "Name of the role.",
                      "type": "string"
                  },
                  "domain": {
                      "description": "id of rs",
                      "type": "string"
                  }
              }
          },
          "schema": {
              "description": "",
              "required": [
                  "id",
                  "schema",
                  "title",
                  "type",
                  "properties"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "schema": {
                      "description": "",
                      "type": "string"
                  },
                  "title": {
                      "description": "",
                      "type": "string"
                  },
                  "type": {
                      "description": "",
                      "type": "string"
                  },
                  "properties": {
                      "description": "",
                      "type": "string"
                  },
                  "required": {
                      "description": "required property name list",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "additional_properties": {
                      "description": "",
                      "type": "boolean"
                  }
              }
          },
          "post_clients_byID_rs_request": {
              "description": "",
              "type": "object",
              "properties": {
                  "xx": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "rs_access_key": {
              "description": "",
              "required": [
                  "openapi_id",
                  "id",
                  "status",
                  "identity_id"
              ],
              "type": "object",
              "properties": {
                  "status": {
                      "description": "",
                      "type": "string"
                  },
                  "expiration_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "openapi_id": {
                      "description": "",
                      "type": "string"
                  },
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "identity_id": {
                      "description": "",
                      "type": "string"
                  },
                  "roles": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/role"
                      }
                  }
              },
              "example": {
                  "status": "some text",
                  "expiration_at": "2018-02-10T09:30Z",
                  "openapi_id": "some text",
                  "id": "some text",
                  "secret": "some text",
                  "identity_id": "some text",
                  "roles": [
                      {
                          "description": "some text",
                          "id": "some text",
                          "name": "some text",
                          "domain": "some text"
                      },
                      {
                          "description": "some text",
                          "id": "some text",
                          "name": "some text",
                          "domain": "some text"
                      }
                  ]
              }
          },
          "set_roles_request": {
              "description": "",
              "required": [
                  "roles"
              ],
              "type": "object",
              "properties": {
                  "roles": {
                      "description": "array of role id",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "list_roles_response": {
              "description": "",
              "required": [
                  "data",
                  "pagination"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/role"
                      }
                  },
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  }
              }
          },
          "put_password_reset_request": {
              "description": "",
              "required": [
                  "new_password"
              ],
              "type": "object",
              "properties": {
                  "new_password": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "get_rs_byID_openapis_response_page": {
              "description": "",
              "required": [
                  "data"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/openapi"
                      }
                  },
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  }
              }
          },
          "get_rs_access_keys": {
              "description": "",
              "required": [
                  "data",
                  "pagination"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/rs_access_key"
                      }
                  },
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  }
              }
          },
          "generic_error_code": {
              "description": "",
              "type": "integer"
          },
          "generic_pagination_response": {
              "description": "",
              "required": [
                  "pagination",
                  "data"
              ],
              "type": "object",
              "properties": {
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  },
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {

                      }
                  }
              }
          },
          "get_version_response": {
              "title": "Root Type for get_version_response",
              "description": "",
              "type": "object",
              "properties": {
                  "version": {
                      "type": "string"
                  }
              },
              "example": {
                  "version": "1.0-a99c432472256caa365b1572aa3c577ab30f2bb8"
              }
          },
          "get_organizations_byID_identities_response": {
              "description": "get all identities belong to the organization, both tenant and member",
              "type": "object",
              "properties": {
                  "email": {
                      "description": "The identity's email.",
                      "default": "john.doe@gmail.com",
                      "type": "string"
                  },
                  "identity_type": {
                      "description": "",
                      "type": "string"
                  },
                  "tenant_id": {
                      "description": "",
                      "type": "string"
                  },
                  "organization_id": {
                      "description": "only required when create tenant and member",
                      "type": "string"
                  }
              }
          },
          "get_organizations_byID_response": {
              "description": "",
              "required": [
                  "name",
                  "description"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "description": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "get_organizations_response_page": {
              "description": "",
              "required": [
                  "data",
                  "pagination"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/organization"
                      }
                  },
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  }
              }
          },
          "organization": {
              "description": "",
              "required": [
                  "updated_at",
                  "short_name",
                  "id",
                  "name",
                  "owner_id",
                  "owner_name",
                  "created_at"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "description": {
                      "description": "",
                      "type": "string"
                  },
                  "owner_id": {
                      "description": "",
                      "type": "string"
                  },
                  "owner_name": {
                      "description": "",
                      "type": "string"
                  },
                  "updated_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "short_name": {
                      "description": "",
                      "type": "string"
                  },
                  "parent_id": {
                      "description": "",
                      "type": "string"
                  },
                  "parent_name": {
                      "description": "",
                      "type": "string"
                  },
                  "created_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "member_num": {
                      "description": "",
                      "type": "integer"
                  }
              }
          },
          "patch_organizations_byID_identities_request": {
              "description": "assign new tenant for the organizations",
              "required": [
                  "identities"
              ],
              "type": "object",
              "properties": {
                  "identities": {
                      "description": "id of identity",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "patch_roles_byID_permission_request": {
              "description": "",
              "required": [
                  "permissions"
              ],
              "type": "object",
              "properties": {
                  "permissions": {
                      "description": "permissions to this role",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "oAuth2Client": {
              "title": "Client represents an OAuth 2.0 Client.",
              "type": "object",
              "properties": {
                  "allowed_cors_origins": {
                      "$ref": "#/components/schemas/StringSlicePipeDelimiter"
                  },
                  "audience": {
                      "$ref": "#/components/schemas/StringSlicePipeDelimiter"
                  },
                  "backchannel_logout_session_required": {
                      "description": "Boolean value specifying whether the RP requires that a sid (session ID) Claim be included in the Logout\nToken to identify the RP session with the OP when the backchannel_logout_uri is used.\nIf omitted, the default value is false.",
                      "type": "boolean"
                  },
                  "backchannel_logout_uri": {
                      "description": "RP URL that will cause the RP to log itself out when sent a Logout Token by the OP.",
                      "type": "string"
                  },
                  "client_id": {
                      "description": "ClientID  is the id for this client.",
                      "type": "string"
                  },
                  "client_name": {
                      "description": "Name is the human-readable string name of the client to be presented to the\nend-user during authorization.",
                      "type": "string"
                  },
                  "client_secret": {
                      "description": "Secret is the client's secret. The secret will be included in the create request as cleartext, and then\nnever again. The secret is stored using BCrypt so it is impossible to recover it. Tell your users\nthat they need to write the secret down as it will not be made available again.",
                      "type": "string"
                  },
                  "client_secret_expires_at": {
                      "format": "int64",
                      "description": "SecretExpiresAt is an integer holding the time at which the client\nsecret will expire or 0 if it will not expire. The time is\nrepresented as the number of seconds from 1970-01-01T00:00:00Z as\nmeasured in UTC until the date/time of expiration.\n\nThis feature is currently not supported and it's value will always\nbe set to 0.",
                      "type": "integer"
                  },
                  "client_uri": {
                      "description": "ClientURI is an URL string of a web page providing information about the client.\nIf present, the server SHOULD display this URL to the end-user in\na clickable fashion.",
                      "type": "string"
                  },
                  "contacts": {
                      "$ref": "#/components/schemas/StringSlicePipeDelimiter"
                  },
                  "created_at": {
                      "format": "date-time",
                      "description": "CreatedAt returns the timestamp of the client's creation.",
                      "type": "string"
                  },
                  "frontchannel_logout_session_required": {
                      "description": "Boolean value specifying whether the RP requires that iss (issuer) and sid (session ID) query parameters be\nincluded to identify the RP session with the OP when the frontchannel_logout_uri is used.\nIf omitted, the default value is false.",
                      "type": "boolean"
                  },
                  "frontchannel_logout_uri": {
                      "description": "RP URL that will cause the RP to log itself out when rendered in an iframe by the OP. An iss (issuer) query\nparameter and a sid (session ID) query parameter MAY be included by the OP to enable the RP to validate the\nrequest and to determine which of the potentially multiple sessions is to be logged out; if either is\nincluded, both MUST be.",
                      "type": "string"
                  },
                  "grant_types": {
                      "$ref": "#/components/schemas/StringSlicePipeDelimiter"
                  },
                  "jwks": {
                      "$ref": "#/components/schemas/JoseJSONWebKeySet"
                  },
                  "jwks_uri": {
                      "description": "URL for the Client's JSON Web Key Set [JWK] document. If the Client signs requests to the Server, it contains\nthe signing key(s) the Server uses to validate signatures from the Client. The JWK Set MAY also contain the\nClient's encryption keys(s), which are used by the Server to encrypt responses to the Client. When both signing\nand encryption keys are made available, a use (Key Use) parameter value is REQUIRED for all keys in the referenced\nJWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both\nsignatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used\nto provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST\nmatch those in the certificate.",
                      "type": "string"
                  },
                  "logo_uri": {
                      "description": "LogoURI is an URL string that references a logo for the client.",
                      "type": "string"
                  },
                  "metadata": {
                      "$ref": "#/components/schemas/JSONRawMessage"
                  },
                  "owner": {
                      "description": "Owner is a string identifying the owner of the OAuth 2.0 Client.",
                      "type": "string"
                  },
                  "policy_uri": {
                      "description": "PolicyURI is a URL string that points to a human-readable privacy policy document\nthat describes how the deployment organization collects, uses,\nretains, and discloses personal data.",
                      "type": "string"
                  },
                  "post_logout_redirect_uris": {
                      "$ref": "#/components/schemas/StringSlicePipeDelimiter"
                  },
                  "redirect_uris": {
                      "$ref": "#/components/schemas/StringSlicePipeDelimiter"
                  },
                  "request_object_signing_alg": {
                      "description": "JWS [JWS] alg algorithm [JWA] that MUST be used for signing Request Objects sent to the OP. All Request Objects\nfrom this Client MUST be rejected, if not signed with this algorithm.",
                      "type": "string"
                  },
                  "request_uris": {
                      "$ref": "#/components/schemas/StringSlicePipeDelimiter"
                  },
                  "response_types": {
                      "$ref": "#/components/schemas/StringSlicePipeDelimiter"
                  },
                  "scope": {
                      "description": "Scope is a string containing a space-separated list of scope values (as\ndescribed in Section 3.3 of OAuth 2.0 [RFC6749]) that the client\ncan use when requesting access tokens.",
                      "pattern": "([a-zA-Z0-9\\.\\*]+\\s?)+",
                      "type": "string"
                  },
                  "sector_identifier_uri": {
                      "description": "URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a\nfile with a single JSON array of redirect_uri values.",
                      "type": "string"
                  },
                  "subject_type": {
                      "description": "SubjectType requested for responses to this Client. The subject_types_supported Discovery parameter contains a\nlist of the supported subject_type values for this server. Valid types include `pairwise` and `public`.",
                      "type": "string"
                  },
                  "token_endpoint_auth_method": {
                      "description": "Requested Client Authentication method for the Token Endpoint. The options are client_secret_post,\nclient_secret_basic, private_key_jwt, and none.",
                      "type": "string"
                  },
                  "tos_uri": {
                      "description": "TermsOfServiceURI is a URL string that points to a human-readable terms of service\ndocument for the client that describes a contractual relationship\nbetween the end-user and the client that the end-user accepts when\nauthorizing the client.",
                      "type": "string"
                  },
                  "updated_at": {
                      "format": "date-time",
                      "description": "UpdatedAt returns the timestamp of the last update.",
                      "type": "string"
                  },
                  "userinfo_signed_response_alg": {
                      "description": "JWS alg algorithm [JWA] REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT\n[JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims\nas a UTF-8 encoded JSON object using the application/json content-type.",
                      "type": "string"
                  }
              },
              "example": {
                  "allowed_cors_origins": [
                      "some text",
                      "some text"
                  ],
                  "audience": [
                      "some text",
                      "some text"
                  ],
                  "backchannel_logout_session_required": true,
                  "backchannel_logout_uri": "some text",
                  "client_id": "some text",
                  "client_name": "some text",
                  "client_secret": "some text",
                  "client_secret_expires_at": 76,
                  "client_uri": "some text",
                  "contacts": [
                      "some text",
                      "some text"
                  ],
                  "created_at": "2018-02-10T09:30Z",
                  "frontchannel_logout_session_required": true,
                  "frontchannel_logout_uri": "some text",
                  "grant_types": [
                      "some text",
                      "some text"
                  ],
                  "jwks": {

                  },
                  "jwks_uri": "some text",
                  "logo_uri": "some text",
                  "metadata": {

                  },
                  "owner": "some text",
                  "policy_uri": "some text",
                  "post_logout_redirect_uris": [
                      "some text",
                      "some text"
                  ],
                  "redirect_uris": [
                      "some text",
                      "some text"
                  ],
                  "request_object_signing_alg": "some text",
                  "request_uris": [
                      "some text",
                      "some text"
                  ],
                  "response_types": [
                      "some text",
                      "some text"
                  ],
                  "scope": "some text",
                  "sector_identifier_uri": "some text",
                  "subject_type": "some text",
                  "token_endpoint_auth_method": "some text",
                  "tos_uri": "some text",
                  "updated_at": "2018-02-10T09:30Z",
                  "userinfo_signed_response_alg": "some text"
              }
          },
          "StringSlicePipeDelimiter": {
              "title": "StringSlicePipeDelimiter de/encodes the string slice to/from a SQL string.",
              "type": "array",
              "items": {
                  "type": "string"
              }
          },
          "genericError": {
              "title": "Error response",
              "description": "Error responses are sent when an error (e.g. unauthorized, bad request, ...) occurred.",
              "required": [
                  "error"
              ],
              "type": "object",
              "properties": {
                  "debug": {
                      "description": "Debug contains debug information. This is usually not available and has to be enabled.",
                      "type": "string",
                      "example": "The database adapter was unable to find the element"
                  },
                  "error": {
                      "description": "Name is the error name.",
                      "type": "string",
                      "example": "The requested resource could not be found"
                  },
                  "error_description": {
                      "description": "Description contains further information on the nature of the error.",
                      "type": "string",
                      "example": "Object with ID 12345 does not exist"
                  },
                  "status_code": {
                      "format": "int64",
                      "description": "Code represents the error status code (404, 403, 401, ...).",
                      "type": "integer",
                      "example": 404
                  }
              }
          },
          "JoseJSONWebKeySet": {
              "description": "",
              "type": "object"
          },
          "JSONRawMessage": {
              "description": "",
              "type": "object"
          },
          "delete_identities_roles_request": {
              "required": [
                  "roles"
              ],
              "type": "object",
              "properties": {
                  "roles": {
                      "description": "List of roles IDs to remove from the identity.",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "get_tenants_members_roles_response": {
              "description": "",
              "required": [
                  "domain",
                  "roles"
              ],
              "type": "object",
              "properties": {
                  "domain": {
                      "description": "",
                      "type": "string"
                  },
                  "roles": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/role"
                      }
                  }
              }
          },
          "put_tenants_members_roles_request": {
              "description": "",
              "required": [
                  "domain",
                  "roles"
              ],
              "type": "object",
              "properties": {
                  "domain": {
                      "description": "",
                      "type": "string"
                  },
                  "roles": {
                      "description": "array of role id",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "permission": {
              "required": [
                  "domain",
                  "resource",
                  "action",
                  "description"
              ],
              "type": "object",
              "properties": {
                  "description": {
                      "description": "Description of this permission.",
                      "type": "string"
                  },
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "domain": {
                      "description": "id of the resource server",
                      "type": "string"
                  },
                  "resource": {
                      "description": "",
                      "type": "string"
                  },
                  "action": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "role": {
              "required": [
                  "domain",
                  "name",
                  "description"
              ],
              "type": "object",
              "properties": {
                  "description": {
                      "description": "Description of the role.",
                      "type": "string"
                  },
                  "id": {
                      "description": "ID for this role.",
                      "type": "string"
                  },
                  "name": {
                      "description": "Name of the role.",
                      "type": "string"
                  },
                  "domain": {
                      "description": "for openapi-role, this field is the baseurl of the openapi; for resource-server, this field is rs_name",
                      "type": "string"
                  },
                  "rs_id": {
                      "description": "",
                      "type": "string"
                  },
                  "created_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "updated_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "post_ak_request": {
              "description": "",
              "required": [
                  "identity_id",
                  "role_ids"
              ],
              "type": "object",
              "properties": {
                  "expiration_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "identity_id": {
                      "description": "",
                      "type": "string"
                  },
                  "role_ids": {
                      "description": "array of role id",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "post_allowed_request": {
              "description": "",
              "required": [
                  "method",
                  "url",
                  "access_key"
              ],
              "type": "object",
              "properties": {
                  "method": {
                      "description": "http request method",
                      "type": "string"
                  },
                  "url": {
                      "description": "request url",
                      "type": "string"
                  },
                  "access_key": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "post_allowed_response": {
              "description": "",
              "required": [
                  "allowed"
              ],
              "type": "object",
              "properties": {
                  "allowed": {
                      "description": "",
                      "type": "boolean"
                  }
              }
          },
          "profile_access_key": {
              "description": "",
              "required": [
                  "openapi_id",
                  "id",
                  "status"
              ],
              "type": "object",
              "properties": {
                  "status": {
                      "description": "",
                      "type": "string"
                  },
                  "expiration_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "openapi_id": {
                      "description": "",
                      "type": "string"
                  },
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "api_version": {
                      "description": "",
                      "type": "string"
                  },
                  "rs_id": {
                      "description": "",
                      "type": "string"
                  },
                  "api_base_url": {
                      "description": "",
                      "type": "string"
                  },
                  "rs_name": {
                      "description": "Friendly name for this resource server. Can not contain `<` or `>` characters.",
                      "type": "string"
                  },
                  "roles": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/role"
                      }
                  }
              },
              "example": {
                  "status": "some text",
                  "expiration_at": "2018-02-10T09:30Z",
                  "openapi_id": "some text",
                  "id": "some text",
                  "api_version": "some text",
                  "rs_id": "some text",
                  "api_base_url": "some text",
                  "rs_name": "some text",
                  "roles": [
                      {
                          "description": "some text",
                          "id": "some text",
                          "name": "some text",
                          "domain": "some text",
                          "rs_id": "some text",
                          "created_at": "2018-02-10T09:30Z",
                          "updated_at": "2018-02-10T09:30Z"
                      },
                      {
                          "description": "some text",
                          "id": "some text",
                          "name": "some text",
                          "domain": "some text",
                          "rs_id": "some text",
                          "created_at": "2018-02-10T09:30Z",
                          "updated_at": "2018-02-10T09:30Z"
                      }
                  ]
              }
          },
          "patch_ak_request": {
              "description": "",
              "required": [
              ],
              "type": "object",
              "properties": {
                  "expiration_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "identity": {
              "required": [
                  "identity_type",
                  "billing_date"
              ],
              "type": "object",
              "properties": {
                  "email": {
                      "format": "email",
                      "description": "Email address of this identity.",
                      "default": "john.doe@gmail.com",
                      "type": "string"
                  },
                  "family_name": {
                      "description": "Family name/last name/surname of this identity.",
                      "type": "string"
                  },
                  "given_name": {
                      "description": "Given name/first name/forename of this identity.",
                      "type": "string"
                  },
                  "name": {
                      "description": "Name of this identity.",
                      "maxLength": 20,
                      "minLength": 3,
                      "type": "string"
                  },
                  "phone_number": {
                      "description": "Phone number for this identity when using SMS connections. Follows the <a href=\"https://en.wikipedia.org/wiki/E.164\">E.164 recommendation</a>.",
                      "default": 199999999999999,
                      "type": "string"
                  },
                  "updated_at": {
                      "description": "Date and time when this identity was last updated/modified (ISO_8601 format).",
                      "type": "string"
                  },
                  "status": {
                      "description": "active/disabled/registered",
                      "type": "string"
                  },
                  "org_id": {
                      "description": "",
                      "type": "string"
                  },
                  "id": {
                      "description": "ID of the identity which can be used when interacting with other APIs.",
                      "default": "auth0|507f1f77bcf86cd799439020",
                      "type": "string"
                  },
                  "identity_type": {
                      "description": "",
                      "type": "string"
                  },
                  "billing_date": {
                      "description": "",
                      "type": "integer"
                  },
                  "avatar": {
                      "description": "头像",
                      "type": "string"
                  },
                  "start_date": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "end_date": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "post_identity_request": {
              "required": [
                  "identity"
              ],
              "type": "object",
              "properties": {
                  "identity": {
                      "$ref": "#/components/schemas/post_identity_request_identity",
                      "description": ""
                  },
                  "organization": {
                      "$ref": "#/components/schemas/post_identity_request_organization",
                      "description": ""
                  }
              }
          },
          "post_identity_request_identity": {
              "required": [
                  "identity_type"
              ],
              "type": "object",
              "properties": {
                  "email": {
                      "format": "email",
                      "description": "Email address of this identity.",
                      "default": "john.doe@gmail.com",
                      "type": "string"
                  },
                  "family_name": {
                      "description": "Family name/last name/surname of this identity.",
                      "type": "string"
                  },
                  "given_name": {
                      "description": "Given name/first name/forename of this identity.",
                      "type": "string"
                  },
                  "name": {
                      "description": "Name of this identity.",
                      "maxLength": 20,
                      "minLength": 3,
                      "type": "string"
                  },
                  "phone_number": {
                      "description": "Phone number for this identity when using SMS connections. Follows the <a href=\"https://en.wikipedia.org/wiki/E.164\">E.164 recommendation</a>.",
                      "default": 199999999999999,
                      "type": "string"
                  },
                  "identity_type": {
                      "description": "",
                      "enum": [
                          "Tenant_Admin",
                          "Tenant_Member",
                          "Individual"
                      ],
                      "type": "string"
                  },
                  "billing_date": {
                      "description": "min vlaue 1, max value 28, default date is 5",
                      "type": "integer"
                  },
                  "start_date": {
                      "format": "date",
                      "description": "生效开始日期",
                      "type": "string"
                  },
                  "end_date": {
                      "format": "date",
                      "description": "有效期结束日期",
                      "type": "string"
                  },
                  "avatar": {
                      "description": "头像--base64编码",
                      "type": "string"
                  },
                  "password": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "post_identity_request_organization": {
              "description": "",
              "required": [
                  "name",
                  "description",
                  "short_name"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "description": {
                      "description": "",
                      "type": "string"
                  },
                  "short_name": {
                      "description": "",
                      "type": "string"
                  },
                  "id": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "post_organization_request": {
              "description": "",
              "required": [
                  "name",
                  "description",
                  "short_name"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "description": {
                      "description": "",
                      "type": "string"
                  },
                  "owner_id": {
                      "description": "",
                      "type": "string"
                  },
                  "short_name": {
                      "description": "",
                      "type": "string"
                  },
                  "parent_id": {
                      "description": "父机构ID，如果为空，代表创建的是顶级机构",
                      "type": "string"
                  }
              }
          },
          "post_rs_roles_identities_request": {
              "description": "",
              "required": [
                  "identities"
              ],
              "type": "object",
              "properties": {
                  "identities": {
                      "description": "array of identity id",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "rs": {
              "required": [
                  "description",
                  "owner_id",
                  "id",
                  "name"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "description": "ID of the API (resource server).",
                      "type": "string"
                  },
                  "name": {
                      "description": "Friendly name for this resource server. Can not contain `<` or `>` characters.",
                      "type": "string"
                  },
                  "description": {
                      "description": "",
                      "type": "string"
                  },
                  "owner_id": {
                      "description": "",
                      "type": "string"
                  },
                  "updated_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "public_domain": {
                      "description": "",
                      "type": "string"
                  },
                  "gateway_configs": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/rs_gateway_config"
                      }
                  },
                  "gateway_admin_url": {
                      "description": "kong gateway admin url",
                      "type": "string"
                  }
              },
              "example": {
                  "id": "some text",
                  "name": "some text",
                  "description": "some text",
                  "owner_id": "some text",
                  "updated_at": "2018-02-10T09:30Z",
                  "public_domain": "some text",
                  "gateway_configs": [
                      {
                          "upstream": "some text",
                          "excludes": [
                              "some text",
                              "some text"
                          ],
                          "protected_path": "some text"
                      },
                      {
                          "upstream": "some text",
                          "excludes": [
                              "some text",
                              "some text"
                          ],
                          "protected_path": "some text"
                      }
                  ]
              }
          },
          "rs_gateway_config": {
              "description": "",
              "required": [
                  "upstream"
              ],
              "type": "object",
              "properties": {
                  "upstream": {
                      "description": "rs internal service url",
                      "type": "string"
                  },
                  "excludes": {
                      "description": "should be subpath of protected path, these path will not be protected, and passthrough to the server",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "protected_path": {
                      "description": "protected path.",
                      "type": "string"
                  }
              }
          },
          "gateway_service": {
              "description": "",
              "required": [
                  "id",
                  "name"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "description": "uuid",
                      "type": "string"
                  },
                  "created_at": {
                      "description": "",
                      "type": "integer"
                  },
                  "updated_at": {
                      "description": "",
                      "type": "integer"
                  },
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "retries": {
                      "description": "",
                      "type": "integer"
                  },
                  "protocol": {
                      "description": "",
                      "type": "string"
                  },
                  "host": {
                      "description": "",
                      "type": "string"
                  },
                  "port": {
                      "description": "",
                      "type": "integer"
                  },
                  "path": {
                      "description": "",
                      "type": "string"
                  },
                  "connect_timeout": {
                      "description": "",
                      "type": "integer"
                  },
                  "write_timeout": {
                      "description": "",
                      "type": "integer"
                  },
                  "read_timeout": {
                      "description": "",
                      "type": "integer"
                  },
                  "tags": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "client_certificate": {
                      "$ref": "#/components/schemas/id_object",
                      "description": ""
                  }
              }
          },
          "id_object": {
              "description": "",
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "gateway_route": {
              "description": "",
              "type": "object",
              "properties": {
                  "paths": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "id": {
                      "description": "uuid",
                      "type": "string"
                  },
                  "created_at": {
                      "description": "",
                      "type": "integer"
                  },
                  "updated_at": {
                      "description": "",
                      "type": "integer"
                  },
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "protocols": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "methods": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "hosts": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "https_redirect_status_code": {
                      "description": "",
                      "type": "integer"
                  },
                  "regex_priority": {
                      "description": "",
                      "type": "integer"
                  },
                  "strip_path": {
                      "description": "",
                      "type": "boolean"
                  },
                  "path_handling": {
                      "description": "",
                      "type": "string"
                  },
                  "preserve_host": {
                      "description": "",
                      "type": "boolean"
                  },
                  "tags": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "service": {
                      "$ref": "#/components/schemas/id_object",
                      "description": ""
                  },
                  "snis": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "sources": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/HostAddress"
                      }
                  },
                  "destinations": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/HostAddress"
                      }
                  }
              }
          },
          "HostAddress": {
              "description": "",
              "type": "object",
              "properties": {
                  "port": {
                      "description": "",
                      "type": "integer"
                  },
                  "ip": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "gateway_plugin": {
              "description": "",
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "created_at": {
                      "description": "",
                      "type": "integer"
                  },
                  "route": {
                      "$ref": "#/components/schemas/id_object",
                      "description": ""
                  },
                  "service": {
                      "$ref": "#/components/schemas/id_object",
                      "description": ""
                  },
                  "consumer": {
                      "$ref": "#/components/schemas/id_object",
                      "description": ""
                  },
                  "config": {
                      "description": ""
                  },
                  "protocols": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "enabled": {
                      "description": "",
                      "type": "boolean"
                  },
                  "tags": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "gateway_consumer": {
              "description": "",
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "created_at": {
                      "description": "",
                      "type": "integer"
                  },
                  "username": {
                      "description": "",
                      "type": "string"
                  },
                  "custom_id": {
                      "description": "",
                      "type": "string"
                  },
                  "tags": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "gateway_plugin_config_oidc": {
              "description": "",
              "type": "object",
              "properties": {
                  "client_id": {
                      "description": "rs_name",
                      "type": "string"
                  },
                  "client_secret": {
                      "description": "",
                      "type": "string"
                  },
                  "scope": {
                      "description": "openid <rs-name> offline",
                      "type": "string"
                  },
                  "discovery": {
                      "description": "hydra public url on gateway",
                      "type": "string"
                  },
                  "redirect_uri_path": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "gateway_plugin_config_hmac": {
              "description": "",
              "type": "object",
              "properties": {
                  "enforce_headers": {
                      "description": "A list of headers which the client should at least use for HTTP signature creation",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "algorithms": {
                      "description": "A list of HMAC digest algorithms which the user wants to support. Allowed values are hmac-sha1, hmac-sha256, hmac-sha384, and hmac-sha512",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "validate_request_body": {
                      "description": "A boolean value telling the plugin to enable body validation",
                      "type": "boolean"
                  },
                  "anonymous": {
                      "description": "An optional string (consumer uuid) value to use as an “anonymous” consumer if authentication fails. If empty (default), the request will fail with an authentication failure 4xx. Please note that this value must refer to the Consumer id attribute which is internal to Kong, and not its custom_id.",
                      "type": "string"
                  },
                  "clock_skew": {
                      "description": "Clock Skew in seconds to prevent replay attacks.default value:\n300",
                      "type": "integer"
                  },
                  "hide_credentials": {
                      "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If true, the plugin will strip the credential from the request (i.e. the Authorization header) before proxying it.default value:\nfalse",
                      "type": "boolean"
                  }
              }
          },
          "gateway_plugin_config_apiauthz": {
              "description": "",
              "type": "object",
              "properties": {
                  "enforce_url": {
                      "description": "pubg.url.k8sauthservice",
                      "type": "string"
                  }
              }
          },
          "gateway_hmac_credential": {
              "description": "",
              "type": "object",
              "properties": {
                  "username": {
                      "description": "",
                      "type": "string"
                  },
                  "secret": {
                      "description": "",
                      "type": "string"
                  },
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "created_at": {
                      "description": "",
                      "type": "integer"
                  },
                  "consumer": {
                      "$ref": "#/components/schemas/id_object",
                      "description": ""
                  }
              }
          },
          "gateway_config": {
              "description": "",
              "type": "object",
              "properties": {
                  "service": {
                      "$ref": "#/components/schemas/gateway_service",
                      "description": ""
                  },
                  "route": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/gateway_route"
                      }
                  },
                  "plugin": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/gateway_plugin"
                      }
                  }
              }
          },
          "zoneinfo": {
              "description": "",
              "required": [
                  "currency",
                  "zone"
              ],
              "type": "object",
              "properties": {
                  "currency": {
                      "description": "",
                      "type": "string"
                  },
                  "zone": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "product": {
              "description": "",
              "required": [
                  "id",
                  "product_name"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "product_name": {
                      "description": "",
                      "type": "string"
                  },
                  "public_domain": {
                      "description": ""
                  }
              }
          },
          "get_profile_accesskey_response_page": {
              "description": "",
              "required": [
                  "pagination",
                  "data"
              ],
              "type": "object",
              "properties": {
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  },
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/profile_access_key"
                      }
                  }
              }
          },
          "openapi": {
              "description": "",
              "required": [
                  "id",
                  "base_url",
                  "version",
                  "file",
                  "rs_id"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "version": {
                      "description": "",
                      "type": "string"
                  },
                  "file": {
                      "description": "",
                      "type": "string"
                  },
                  "rs_id": {
                      "description": "",
                      "type": "string"
                  },
                  "base_url": {
                      "description": "",
                      "type": "string"
                  },
                  "internal_url": {
                      "description": "",
                      "type": "string"
                  }
              },
              "example": {
                  "id": "some text",
                  "version": "some text",
                  "file": "some text",
                  "rs_id": "some text",
                  "base_url": "some text",
                  "internal_url": "some text",
                  "enforce_headers": "some text",
                  "validate_body": true
              }
          },
          "post_rs_byID_openapis_request": {
              "description": "",
              "required": [
                  "file",
                  "internal_url",
                  "base_url"
              ],
              "type": "object",
              "properties": {
                  "file": {
                      "format": "binary",
                      "description": "",
                      "type": "string"
                  },
                  "internal_url": {
                      "description": "url in internal k8s",
                      "type": "string"
                  },
                  "base_url": {
                      "description": "",
                      "type": "string"
                  }
              },
              "example": {
                  "file": "<FILE>",
                  "internal_url": "some text",
                  "enforce_headers": "some text",
                  "validate_body": true,
                  "base_url": "some text"
              }
          },
          "get_secret_request": {
              "description": "",
              "required": [
                  "password"
              ],
              "type": "object",
              "properties": {
                  "password": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "get_secret_response": {
              "description": "",
              "required": [
                  "id",
                  "secret"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "secret": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "provider_account": {
              "description": "",
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "provider_name": {
                      "description": "",
                      "type": "string"
                  },
                  "email": {
                      "format": "email",
                      "description": "Email address of this identity.",
                      "default": "john.doe@gmail.com",
                      "type": "string"
                  },
                  "family_name": {
                      "description": "Family name/last name/surname of this identity.",
                      "type": "string"
                  },
                  "given_name": {
                      "description": "Given name/first name/forename of this identity.",
                      "type": "string"
                  },
                  "name": {
                      "description": "Name of this identity.",
                      "maxLength": 20,
                      "minLength": 3,
                      "type": "string"
                  },
                  "phone_number": {
                      "type": "string"
                  },
                  "updated_at": {
                      "description": "Date and time when this identity was last updated/modified (ISO_8601 format).",
                      "type": "string"
                  },
                  "account_name": {
                      "description": "",
                      "type": "string"
                  },
                  "provider_id": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "patch_rs_byID_openapis_byVersion_request": {
              "description": "",
              "required": [
                  "base_url",
                  "internal_url",
                  "file"
              ],
              "type": "object",
              "properties": {
                  "internal_url": {
                      "description": "url in internal k8s",
                      "type": "string"
                  },
                  "base_url": {
                      "description": "",
                      "type": "string"
                  },
                  "file": {
                      "format": "binary",
                      "description": "",
                      "type": "string"
                  }
              },
              "example": {
                  "internal_url": "some text",
                  "enforce_headers": "some text",
                  "validate_body": true,
                  "base_url": "some text",
                  "file": "<FILE>"
              }
          },
          "profile_provider": {
              "description": "",
              "required": [
                  "name",
                  "auth_url",
                  "id"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "description": "provider name",
                      "type": "string"
                  },
                  "auth_url": {
                      "description": "",
                      "type": "string"
                  },
                  "account_id": {
                      "description": "",
                      "type": "string"
                  },
                  "account_name": {
                      "description": "",
                      "type": "string"
                  },
                  "aound_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "id": {
                      "description": "provider id",
                      "type": "string"
                  }
              }
          },
          "provider": {
              "description": "",
              "required": [
                  "name",
                  "auth_url"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "auth_url": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "put_identity_status": {
              "description": "",
              "required": [
              ],
              "type": "object",
              "properties": {
                  "action": {
                      "description": "enable/disable",
                      "type": "string"
                  },
                  "start_date": {
                      "format": "date",
                      "description": "",
                      "type": "string"
                  },
                  "end_date": {
                      "format": "date",
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "operation_log": {
              "description": "操作/登录日志",
              "required": [
                  "operation_time",
                  "identity_id"
              ],
              "type": "object",
              "properties": {
                  "operation_time": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "action": {
                      "description": "",
                      "type": "string"
                  },
                  "resource": {
                      "description": "操作资源",
                      "type": "string"
                  },
                  "content": {
                      "description": "操作内容",
                      "type": "string"
                  },
                  "client_ip": {
                      "description": "",
                      "type": "string"
                  },
                  "result": {
                      "description": "成功/失败",
                      "type": "string"
                  },
                  "rs_id": {
                      "description": "",
                      "type": "string"
                  },
                  "identity_id": {
                      "description": "",
                      "type": "string"
                  },
                  "name": {
                      "description": "identity name",
                      "type": "string"
                  },
                  "email": {
                      "description": "identity email",
                      "type": "string"
                  },
                  "rs_name": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "get_logs_response_page": {
              "description": "",
              "required": [
                  "data",
                  "pagination"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/operation_log"
                      }
                  },
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  }
              }
          },
          "organization_tree": {
              "description": "",
              "required": [
                  "name",
                  "short_name",
                  "created_at",
                  "id",
                  "owner_id",
                  "owner_name",
                  "updated_at"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "description": "",
                      "type": "string"
                  },
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "description": {
                      "description": "",
                      "type": "string"
                  },
                  "owner_id": {
                      "description": "",
                      "type": "string"
                  },
                  "owner_name": {
                      "description": "",
                      "type": "string"
                  },
                  "updated_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "short_name": {
                      "description": "",
                      "type": "string"
                  },
                  "parent_id": {
                      "description": "",
                      "type": "string"
                  },
                  "sub_organizations": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/organization_tree"
                      }
                  },
                  "created_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "parent_name": {
                      "description": "",
                      "type": "string"
                  },
                  "member_num": {
                      "description": "",
                      "type": "integer"
                  }
              }
          },
          "organization_member": {
              "required": [
                  "identity_type",
                  "billing_date"
              ],
              "type": "object",
              "properties": {
                  "email": {
                      "format": "email",
                      "description": "Email address of this identity.",
                      "default": "john.doe@gmail.com",
                      "type": "string"
                  },
                  "family_name": {
                      "description": "Family name/last name/surname of this identity.",
                      "type": "string"
                  },
                  "given_name": {
                      "description": "Given name/first name/forename of this identity.",
                      "type": "string"
                  },
                  "name": {
                      "description": "Name of this identity.",
                      "maxLength": 20,
                      "minLength": 3,
                      "type": "string"
                  },
                  "phone_number": {
                      "description": "Phone number for this identity when using SMS connections. Follows the <a href=\"https://en.wikipedia.org/wiki/E.164\">E.164 recommendation</a>.",
                      "default": 199999999999999,
                      "type": "string"
                  },
                  "updated_at": {
                      "description": "Date and time when this identity was last updated/modified (ISO_8601 format).",
                      "type": "string"
                  },
                  "status": {
                      "description": "Whether this identity was blocked by an administrator (true) or is not (false).",
                      "type": "boolean"
                  },
                  "org_id": {
                      "description": "",
                      "type": "string"
                  },
                  "id": {
                      "description": "ID of the identity which can be used when interacting with other APIs.",
                      "default": "auth0|507f1f77bcf86cd799439020",
                      "type": "string"
                  },
                  "identity_type": {
                      "description": "",
                      "type": "string"
                  },
                  "billing_date": {
                      "description": "",
                      "type": "integer"
                  },
                  "roles": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/role"
                      }
                  },
                  "start_date": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "end_date": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  },
                  "org_name": {
                      "description": "",
                      "type": "string"
                  },
                  "created_at": {
                      "format": "date-time",
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "get_organizations_members_response_page": {
              "description": "",
              "required": [
                  "data",
                  "pagination"
              ],
              "type": "object",
              "properties": {
                  "data": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/organization_member"
                      }
                  },
                  "pagination": {
                      "$ref": "#/components/schemas/pagination",
                      "description": ""
                  }
              }
          },
          "put_profile_photo_request": {
              "description": "",
              "required": [
                  "photo"
              ],
              "type": "object",
              "properties": {
                  "photo": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "set_members_request": {
              "description": "",
              "required": [
                  "members"
              ],
              "type": "object",
              "properties": {
                  "members": {
                      "description": "array of member identity id",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "ratelimit_config": {
              "description": "",
              "required": [
              ],
              "type": "object",
              "properties": {
                  "access_key_id": {
                      "description": "",
                      "type": "string"
                  },
                  "consumer_id": {
                      "description": "",
                      "type": "string"
                  },
                  "access_key_limit": {
                      "$ref": "#/components/schemas/limit",
                      "description": ""
                  },
                  "consumer_limit": {
                      "$ref": "#/components/schemas/limit",
                      "description": ""
                  }
              }
          },
          "limit": {
              "description": "",
              "type": "object",
              "properties": {
                  "second": {
                      "format": "int64",
                      "description": "",
                      "type": "integer"
                  },
                  "minute": {
                      "format": "int64",
                      "description": "",
                      "type": "integer"
                  },
                  "hour": {
                      "format": "int64",
                      "description": "",
                      "type": "integer"
                  },
                  "day": {
                      "format": "int64",
                      "description": "",
                      "type": "integer"
                  },
                  "month": {
                      "format": "int64",
                      "description": "",
                      "type": "integer"
                  },
                  "year": {
                      "format": "int64",
                      "description": "",
                      "type": "integer"
                  }
              }
          },
          "login_type_config": {
              "description": "",
              "required": [
                  "login_type"
              ],
              "type": "object",
              "properties": {
                  "login_type": {
                      "description": "",
                      "enum": [
                          "ad",
                          "adfs"
                      ],
                      "type": "string"
                  },
                  "domain": {
                      "description": "AD: email domain",
                      "type": "string"
                  },
                  "use_tls": {
                      "description": "AD type",
                      "type": "boolean"
                  },
                  "host": {
                      "description": "AD",
                      "type": "string"
                  },
                  "port": {
                      "description": "AD",
                      "type": "integer"
                  },
                  "base_dn": {
                      "description": "AD:base search DN",
                      "type": "string"
                  },
                  "id": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "parameter_item": {
              "description": "",
              "required": [
                  "name",
                  "value"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "description": "",
                      "type": "string"
                  },
                  "value": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "openapi_gateway_plugin_config": {
              "description": "",
              "required": [
                  "hmac_auth",
                  "log_billing",
                  "api_authz",
                  "ratelimitingx",
                  "st_waf"
              ],
              "type": "object",
              "properties": {
                  "api_authz": {
                      "$ref": "#/components/schemas/openapi_gateway_plugin_apiauthz_config",
                      "description": ""
                  },
                  "log_billing": {
                      "$ref": "#/components/schemas/openapi_gateway_plugin_logbilling_config",
                      "description": ""
                  },
                  "ratelimitingx": {
                      "$ref": "#/components/schemas/openapi_gateway_plugin_ratelimitingx_config",
                      "description": ""
                  },
                  "hmac_auth": {
                      "$ref": "#/components/schemas/openapi_gateway_plugin_hmac_config",
                      "description": ""
                  },
                  "st_waf": {
                      "$ref": "#/components/schemas/openapi_gateway_plugin_waf_config",
                      "description": ""
                  }
              }
          },
          "openapi_gateway_plugin_hmac_config": {
              "description": "",
              "required": [
                  "active",
                  "enforce_headers",
                  "validate_request_body"
              ],
              "type": "object",
              "properties": {
                  "active": {
                      "description": "",
                      "type": "boolean"
                  },
                  "enforce_headers": {
                      "description": "",
                      "type": "string"
                  },
                  "validate_request_body": {
                      "description": "",
                      "type": "boolean"
                  }
              }
          },
          "openapi_gateway_plugin_apiauthz_config": {
              "description": "",
              "required": [
                  "active"
              ],
              "type": "object",
              "properties": {
                  "active": {
                      "description": "",
                      "type": "boolean"
                  }
              }
          },
          "openapi_gateway_plugin_logbilling_config": {
              "description": "",
              "required": [
                  "active"
              ],
              "type": "object",
              "properties": {
                  "active": {
                      "description": "",
                      "type": "boolean"
                  }
              }
          },
          "openapi_gateway_plugin_waf_config": {
              "description": "",
              "required": [
                  "active"
              ],
              "type": "object",
              "properties": {
                  "active": {
                      "description": "",
                      "type": "boolean"
                  }
              }
          },
          "openapi_gateway_plugin_ratelimitingx_config": {
              "description": "",
              "required": [
                  "active",
                  "second",
                  "minute",
                  "hour",
                  "day",
                  "month"
              ],
              "type": "object",
              "properties": {
                  "active": {
                      "description": "",
                      "type": "boolean"
                  },
                  "second": {
                      "description": "",
                      "type": "integer"
                  },
                  "minute": {
                      "description": "",
                      "type": "integer"
                  },
                  "hour": {
                      "description": "",
                      "type": "integer"
                  },
                  "day": {
                      "description": "",
                      "type": "integer"
                  },
                  "month": {
                      "description": "",
                      "type": "integer"
                  }
              }
          },
          "approval_identities_request": {
              "description": "",
              "required": [
                  "ids"
              ],
              "type": "object",
              "properties": {
                  "reason": {
                      "description": "",
                      "type": "string"
                  },
                  "ids": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "wafconfig": {
              "description": "",
              "required": [
                  "type",
                  "path"
              ],
              "type": "object",
              "properties": {
                  "type": {
                      "description": "",
                      "type": "string"
                  },
                  "path": {
                      "description": "",
                      "type": "string"
                  }
              }
          },
          "patch_rs_request": {
              "title": "Root Type for post_resource-servers_request",
              "description": "",
              "required": [
                  "public_domain"
              ],
              "type": "object",
              "properties": {
                  "public_domain": {
                      "description": "",
                      "type": "string"
                  }
              },
              "example": {
                  "public_domain": "some text"
              }
          },
          "webui_gateway_plugin_config": {
              "description": "",
              "required": [
                  "st_waf",
                  "oidc",
                  "request-transformer"
              ],
              "type": "object",
              "properties": {
                  "st_waf": {
                      "$ref": "#/components/schemas/openapi_gateway_plugin_waf_config",
                      "description": ""
                  },
                  "oidc": {
                      "$ref": "#/components/schemas/webui_gateway_plugin_oidc_config",
                      "description": ""
                  },
                  "request-transformer": {
                      "$ref": "#/components/schemas/webui_gateway_plugin_requesttransformer_config",
                      "description": ""
                  }
              },
              "example": {
                  "st_waf": {
                      "active": true
                  },
                  "oidc": {
                      "active": true,
                      "excludes": [
                          "some text",
                          "some text"
                      ]
                  },
                  "request-transformer": {
                      "active": true
                  }
              }
          },
          "webui_gateway_plugin_oidc_config": {
              "description": "",
              "required": [
                  "active",
                  "excludes"
              ],
              "type": "object",
              "properties": {
                  "active": {
                      "description": "",
                      "type": "boolean"
                  },
                  "excludes": {
                      "description": "should be subpath of protected path, these path will not be protected, and passthrough to the server",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  }
              }
          },
          "webui_gateway_plugin_requesttransformer_config": {
              "description": "",
              "required": [
                  "active"
              ],
              "type": "object",
              "properties": {
                  "active": {
                      "description": "",
                      "type": "boolean"
                  }
              }
          },
          "webui_gateway_config_put_request": {
              "description": "",
              "required": [
                  "version",
                  "paths"
              ],
              "type": "object",
              "properties": {
                  "version": {
                      "description": "",
                      "type": "string"
                  },
                  "paths": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/webui_gateway_path_config"
                      }
                  }
              }
          },
          "webui_gateway_config_get_response": {
              "description": "",
              "required": [
                  "version",
                  "paths"
              ],
              "type": "object",
              "properties": {
                  "version": {
                      "description": "",
                      "type": "string"
                  },
                  "paths": {
                      "description": "",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/webui_gateway_path_config"
                      }
                  }
              }
          },
          "webui_gateway_path_config": {
              "description": "",
              "required": [
                  "upstream",
                  "plugins",
                  "path"
              ],
              "type": "object",
              "properties": {
                  "upstream": {
                      "description": "rs internal service url",
                      "type": "string"
                  },
                  "path": {
                      "description": "protected path.",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  "plugins": {
                      "$ref": "#/components/schemas/webui_gateway_plugin_config",
                      "description": ""
                  }
              },
              "example": {
                  "upstream": "some text",
                  "path": [
                      "some text",
                      "some text"
                  ],
                  "plugins": {
                      "st_waf": {
                          "active": true
                      },
                      "oidc": {
                          "active": true,
                          "excludes": [
                              "some text",
                              "some text"
                          ]
                      },
                      "request-transformer": {
                          "active": true
                      }
                  }
              }
          },
          "gateway_config_transform": {
              "description": "",
              "required": [
                  "new_version"
              ],
              "type": "object",
              "properties": {
                  "old_version": {
                      "description": "",
                      "type": "string"
                  },
                  "new_version": {
                      "description": "",
                      "type": "string"
                  }
              }
          }
      },
      "requestBodies": {
          "oAuth2Client": {
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/oAuth2Client"
                      }
                  }
              },
              "required": true
          }
      }
  }
}